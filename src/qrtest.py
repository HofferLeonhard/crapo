# import qrcode

# qr = qrcode.QRCode(
#     version=1,
#     error_correction=qrcode.constants.ERROR_CORRECT_L,
#     box_size=10,
#     border=4,
# )
# qr.add_data('ox="0 0 18 18"><path d="M12.86 11.32L18 16.5 16.5 18l-5.18-5.14v-.35a7 7 0 1 1 1.19-1.19h.35zM7 12A5 5 0 1 0 7 2a5 5 0 0 0 0 10z"/></svg></a></li>
                <li class="-item">
                <a href="/users/11214460/boloss" class="my-profile js-gps-track" data-gps-track="profile_summary.click()">
                <div class="gravatar-wrapper-24" title="Boloss"><img src="https://lh6.googleusercontent.com/-OVmwCkWSCUA/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rdtA2yzFctn003hRIC-eq7nGaRU6Q/mo/photo.jpg?sz=48" alt="" width="24" height="24" class="-avatar js-avatar-me"></div>
                    <div class="-rep js-header-rep" title="your reputation: 1">1</div>
                        <div class="-badges">
                        </div>
                </a>
            </li>
        <li class="-item inbox-button-item">
        <a href="https://stackexchange.com/users/15544899?tab=inbox" class="-link js-inbox-button" title="Recent inbox messages">
            <svg aria-hidden="true" class="svg-icon iconInbox" width="20" height="18" viewBox="0 0 20 18"><path d="M15.19 1H4.63c-.85 0-1.6.54-1.85 1.35L0 10.79V15c0 1.1.9 2 2 2h16a2 2 0 0 0 2-2v-4.21l-2.87-8.44A2 2 0 0 0 15.19 1zm-.28 10l-2 2h-6l-2-2H1.96L4.4 3.68A1 1 0 0 1 5.35 3h9.12a1 1 0 0 1 .95.68L17.86 11h-2.95z"/></svg>
            <span class="indicator-badge js-unread-count _important" style="display: none;"></span>
        </a>
    </li>
    <li class="-item achievements-button-item">
        <a href="https://stackexchange.com/users/15544899?tab=reputation" class="-link js-achievements-button" title="Recent achievements: reputation, badges, and privileges earned" data-unread-class="_highlighted-positive">
            <svg aria-hidden="true" class="svg-icon iconAchievements" width="18" height="18" viewBox="0 0 18 18"><path d="M15 2V1H3v1H0v4c0 1.6 1.4 3 3 3v1c.4 1.5 3 2.6 5 3v2H5s-1 1.5-1 2h10c0-.4-1-2-1-2h-3v-2c2-.4 4.6-1.5 5-3V9c1.6-.2 3-1.4 3-3V2h-3zM3 7c-.5 0-1-.5-1-1V4h1v3zm8.4 2.5L9 8 6.6 9.4l1-2.7L5 5h3l1-2.7L10 5h2.8l-2.3 1.8 1 2.7h-.1zM16 6c0 .5-.5 1-1 1V4h1v2z"/></svg>
            <span class="indicator-badge js-unread-count _positive" style="display: none;"></span>
        </a>
    </li>

    <li class="-item help-button-item" data-remove-order=1><a href="#" class="-link js-help-button" title="Help Center and other resources">
        <svg aria-hidden="true" class="svg-icon iconHelp" width="18" height="18" viewBox="0 0 18 18"><path d="M9 1a8 8 0 1 0 0 16A8 8 0 0 0 9 1zm.81 12.13c-.02.71-.55 1.15-1.24 1.13-.66-.02-1.17-.49-1.15-1.2.02-.72.56-1.18 1.22-1.16.7.03 1.2.51 1.17 1.23zM11.77 8a5.8 5.8 0 0 1-1.02.91l-.53.37c-.26.2-.42.43-.5.69a4 4 0 0 0-.09.75c0 .05-.03.16-.18.16H7.88c-.16 0-.18-.1-.18-.15.03-.66.12-1.21.4-1.66a5.29 5.29 0 0 1 1.43-1.22c.16-.12.28-.25.38-.39a1.34 1.34 0 0 0 .02-1.71c-.24-.31-.51-.46-1.03-.46-.51 0-.8.26-1.02.6-.21.33-.18.73-.18 1.1H5.75c0-1.38.35-2.25 1.1-2.76.52-.35 1.17-.5 1.93-.5 1 0 1.79.18 2.49.71.64.5.98 1.18.98 2.12 0 .57-.2 1.05-.48 1.44z"/></svg>
    </a></li>

    <li class="-item site-switcher-item">
        <a href="https://stackexchange.com" class="-link js-site-switcher-button js-gps-track" data-gps-track="site_switcher.show" title="A list of all 175 Stack Exchange sites">
            <svg aria-hidden="true" class="svg-icon iconStackExchange" width="18" height="18" viewBox="0 0 18 18"><path d="M1 13c0 1.1.9 2 2 2h8v3l3-3h1a2 2 0 0 0 2-2v-2H1v2zM15 1H3a2 2 0 0 0-2 2v2h16V3a2 2 0 0 0-2-2zM1 6h16v4H1V6z"/></svg>
        </a>
    </li>


    <li class="-dialog-container js-topbar-dialog-corral">


    <div class="topbar-dialog siteSwitcher-dialog dno">
        <div class="header">
            <h3><a href="https://stackoverflow.com">current community</a>
            </h3>
        </div>
        <div class="modal-content current-site-container">
            <ul class="current-site">
                    <li class="grid">
                            <div class="fl1">
            <a href="https://stackoverflow.com"
       class="current-site-link site-link js-gps-track grid gs8 gsx"
       data-id="1"
       data-gps-track="site_switcher.click({ item_type:3 })">
        <div class="favicon favicon-stackoverflow site-icon grid--cell" title="Stack Overflow"></div>
        <span class="grid--cell fl1">
            Stack Overflow
        </span>
    </a>

    </div>
    <div class="related-links">
            <a href="https://stackoverflow.com/help" class="js-gps-track"     data-gps-track="site_switcher.click({ item_type:14 })"
>help</a>
                    <a href="https://chat.stackoverflow.com" class="js-gps-track"     data-gps-track="site_switcher.click({ item_type:6 })"
>chat</a>
                    <a href="https://stackoverflow.com/users/logout" class="js-gps-track"     data-gps-track="site_switcher.click({ item_type:8 })"
>log out</a>
    </div>

                    </li>
                    <li class="related-site grid">
                            <div class="L-shaped-icon-container">
        <span class="L-shaped-icon"></span>
    </div>

                            <a href="https://meta.stackoverflow.com"
       class="site-link js-gps-track grid gs8 gsx"
       data-id="552"
       data-gps-track="site.switch({ target_site:552, item_type:3 }),site_switcher.click({ item_type:4 })">
        <div class="favicon favicon-stackoverflowmeta site-icon grid--cell" title="Meta Stack Overflow"></div>
        <span class="grid--cell fl1">
            Meta Stack Overflow
        </span>
    </a>

                    </li>
            </ul>
        </div>

        <div class="header" id="your-communities-header">
            <h3>
                    <a href="https://stackexchange.com/users/15544899/?tab=accounts">your communities</a>
            </h3>

                <a href="#" id="edit-pinned-sites">edit</a>
                <a href="#" id="cancel-pinned-sites" style="display: none;">cancel</a>
        </div>
        <div class="modal-content" id="your-communities-section">

                <ul class="my-sites">
                        <li>
                                <a href="https://stackoverflow.com"
       class="site-link js-gps-track grid gs8 gsx"
       data-id="1"
       data-gps-track="site.switch({ target_site:1, item_type:3 }),site_switcher.click({ item_type:1 })">
        <div class="favicon favicon-stackoverflow site-icon grid--cell" title="Stack Overflow"></div>
        <span class="grid--cell fl1">
            Stack Overflow
        </span>
            <span class="rep-score grid--cell">1</span>
    </a>

                        </li>
                </ul>
                    <div class="pinned-site-editor-container" style="display: none;">
                        <input type="hidden" name="fkey" value="30522f3ff56f6324c0c9ca4ba7899db6d7891cbe856249719fd4a350a57eea74">
                        <input id="js-site-search-txt"
                                type="text"
                                class="site-filter-input"
                                value=""
                                placeholder="Add a Stack Exchange community"/>
                        <input type="submit" id="pin-site-btn" value="Add" disabled="disabled"/>
                        <ul class="js-found-sites found-sites"></ul>
                        <ul class="pinned-site-list sortable" data-custom-list="False">
                        </ul>
                        <input type="submit" value="Save" id="save-pinned-sites-btn" disabled="disabled"/>
                        <a href="#" id="reset-pinned-sites">reset to default list</a>
                    </div>
        </div>

        <div class="header">
            <h3><a href="https://stackexchange.com/sites">more stack exchange communities</a>
            </h3>
            <a href="https://stackoverflow.blog" class="fr">company blog</a>
        </div>
        <div class="modal-content">
                <div class="child-content"></div>
        </div>        
    </div>
            <div class="topbar-dialog help-dialog js-help-dialog dno">
        <div class="modal-content">
            <ul>
                                    <li>
                        <a href="/tour" class="js-gps-track" data-gps-track="help_popup.click({ item_type:1 })">
                            Tour
                            <span class="item-summary">
                                Start here for a quick overview of the site
                            </span>
                        </a>
                    </li>
                <li>
                    <a href="/help" class="js-gps-track" data-gps-track="help_popup.click({ item_type:4 })">
                        Help Center
                        <span class="item-summary">
                            Detailed answers to any questions you might have
                        </span>
                    </a>
                </li>
                        <li>
                            <a href="https://meta.stackoverflow.com" class="js-gps-track" data-gps-track="help_popup.click({ item_type:2 })">
                                Meta
                                <span class="item-summary">
                                    Discuss the workings and policies of this site
                                </span>
                            </a>
                        </li>
                        <li>
                            <a href="https://stackoverflow.com/company/about" class="js-gps-track" data-gps-track="help_popup.click({ item_type:6 })">
                                About Us
                                <span class="item-summary">
                                    Learn more about Stack Overflow the company
                                </span>
                            </a>
                        </li>
                        <li>
                            <a href="https://www.stackoverflowbusiness.com/?ref=topbar_help" class="js-gps-track" data-gps-track="help_popup.click({ item_type:7 })">
                                Business
                                <span class="item-summary">
                                    Learn more about hiring developers or posting ads with us
                                </span>
                            </a>
                        </li>
            </ul>
        </div>
    </div>
                    <div class="topbar-dialog leftnav-dialog js-leftnav-dialog dno">
                <div class="left-sidebar js-unpinned-left-sidebar" data-can-be="left-sidebar" data-is-here-when="sm"></div>
            </div>
    </li>
</ol>

    </div>
</header>

    <script>
        StackExchange.ready(function () { StackExchange.topbar.init({ observeSize: true }); });
        StackExchange.scrollPadding.setPaddingTop(50, 10);     </script>






    <div class="container">





<div id="left-sidebar" data-is-here-when="md lg" class="left-sidebar js-pinned-left-sidebar">
    <div class="left-sidebar--sticky-container js-sticky-leftnav">
            <nav role="navigation">
                <ol class="nav-links">
                    <li>    <li>
        <a
            href="/"
            class="pl8 js-gps-track nav-links--link"
            
            data-gps-track="top_nav.click({is_current:false, location:2, destination:8})">
Home        </a>
    </li>
</li>
                    <li>
                        <ol class="nav-links">
                                <li class="fs-fine tt-uppercase ml8 mt16 mb4 fc-light">Public</li>
                                <li class=" youarehere">
        <a id="nav-questions"
            href="/questions"
            class="pl8 js-gps-track nav-links--link -link__with-icon"
            
            data-gps-track="top_nav.click({is_current:true, location:2, destination:1})">
<svg aria-hidden="true" class="svg-icon iconGlobe" width="18" height="18" viewBox="0 0 18 18"><path d="M9 1a8 8 0 1 0 0 16A8 8 0 0 0 9 1zM8 15.32a6.4 6.4 0 0 1-5.23-7.75L7 11.68v.8c0 .88.12 1.32 1 1.32v1.52zm5.72-2c-.2-.66-1-1.32-1.72-1.32h-1v-2c0-.44-.56-1-1-1H6V7h1c.44 0 1-.56 1-1V5h2c.88 0 1.4-.72 1.4-1.6v-.33a6.4 6.4 0 0 1 2.32 10.24z"/></svg>                <span class="-link--channel-name">Stack Overflow</span>
        </a>
    </li>

    <li>
        <a id="nav-tags"
            href="/tags"
            class=" js-gps-track nav-links--link"
            
            data-gps-track="top_nav.click({is_current:false, location:2, destination:2})">
Tags        </a>
    </li>
    <li>
        <a id="nav-users"
            href="/users"
            class=" js-gps-track nav-links--link"
            
            data-gps-track="top_nav.click({is_current:false, location:2, destination:3})">
Users        </a>
    </li>
    <li>
        <a id="nav-jobs"
            href="/jobs?med=site-ui&amp;ref=jobs-tab"
            class=" js-gps-track nav-links--link"
            
            data-gps-track="top_nav.click({is_current:false, location:2, destination:6})">
Jobs        </a>
    </li>
                                                    </ol>
                    </li>
                        <li>
                            <ol class="nav-links">
                                        <li class="p6">
                                            <div class="ba bc-black-2 bar-sm p16 grid fd-column ps-relative overflow-hidden">
                                                <strong class="grid--cell">Teams</strong>
                                                <span class="grid--cell mt2 fs-caption fc-medium">Q&amp;A for work </span>
                                                <a href="https://stackoverflow.com/teams"
                                                   class="js-gps-track s-btn s-btn__outlined ta-center grid--cell mt12"
                                                   data-gps-track="teams.create.left-sidenav.click({ CampaignType: None})"
                                                   data-ga="[&quot;teams traffic&quot;,&quot;left nav cta&quot;,&quot;stackoverflow.com/teams&quot;,null,{&quot;dimension4&quot;:&quot;teams&quot;}]">
                                                    Learn More
                                                </a>

                                                <div class="ps-absolute t4 rn6">
                                                    <svg width="53" height="49" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M49 11l.2 31H18.9L9 49v-7H4V8h31" fill="#CCEAFF" /><path d="M44.5 19v-.3l-.2-.1-18-13-.1-.1H.5v33h4V46l.8-.6 9.9-6.9h29.3V19z" stroke="#1060E1" stroke-miterlimit="10" /><path d="M31 2l6-1.5 7 2V38H14.9L5 45v-7H1V6h25l5-4z" fill="#fff" /><path d="M7 16.5h13m-13 6h14m-14 6h18" stroke="#1060E1" stroke-miterlimit="10" /><path d="M39 30a14 14 0 1 0 0-28 14 14 0 0 0 0 28z" fill="#FFB935" /><path d="M50.5 14a13.5 13.5 0 1 1-27 0 13.5 13.5 0 0 1 27 0z" stroke="#F48024" stroke-miterlimit="10" /><path d="M32.5 21.5v-8h9v8h-9zm2-9.5V9.3A2.5 2.5 0 0 1 37 6.8a2.5 2.5 0 0 1 2.5 2.5V12h-5zm2 3v2m1-2v2" stroke="#fff" stroke-miterlimit="10" /></svg>
                                                </div>
                                            </div>
                                        </li>
                            </ol>
                        </li>
                </ol>
            </nav>
    </div>
</div>
   

        <div id="content" class="snippet-hidden">


            


<div itemprop="mainEntity" itemscope itemtype="http://schema.org/Question">
    <link itemprop="image" href="https://cdn.sstatic.net/Sites/stackoverflow/img/apple-touch-icon.png?v=c78bd457575a">

    <div class="inner-content clearfix">
    
    

            <div id="question-header" class="grid">
                    <h1 itemprop="name" class="grid--cell fs-headline1 fl1 ow-break-word"><a href="/questions/1413540/showing-an-image-from-console-in-python" class="question-hyperlink">Showing an image from console in Python</a></h1>

            
<div class="pl8 aside-cta grid--cell" role="navigation" aria-label="ask new question">
        <a href="/questions/ask" class="d-inline-flex ai-center ws-nowrap s-btn s-btn__primary" >
            Ask Question
        </a>
</div>

        </div>
            <div id="mainbar" role="main" aria-label="question and answers">

            

<div class="question" data-questionid="1413540"  id="question">

    <style>.everyoneloves__top-leaderboard:empty,.everyoneloves__mid-leaderboard:empty,.everyoneloves__bot-mid-leaderboard:empty{                height:90px;width:728px;box-sizing:border-box;
}</style>
        <div id="dfp-tlb" class="everyonelovesstackoverflow everyoneloves__top-leaderboard"></div>
    <div class="post-layout">
            <div class="votecell post-layout--left">
                

<div class="js-voting-container grid fd-column ai-stretch gs4 fc-black-200" data-post-id="1413540">
        <button class="js-vote-up-btn grid--cell s-btn s-btn__unset c-pointer" title="This question shows research effort; it is useful and clear (click again to undo)" aria-pressed="false" aria-label="up vote" data-selected-classes="fc-theme-primary"><svg aria-hidden="true" class="svg-icon m0 iconArrowUpLg" width="36" height="36" viewBox="0 0 36 36"><path d="M2 26h32L18 10z"/></svg></button>
        <div class="js-vote-count grid--cell fc-black-500 fs-title grid fd-column ai-center" itemprop="upvoteCount" data-value="27">27</div>
        <button class="js-vote-down-btn grid--cell s-btn s-btn__unset c-pointer" title="This question does not show any research effort; it is unclear or not useful (click again to undo)" aria-pressed="false" aria-label="down vote" data-selected-classes="fc-theme-primary"><svg aria-hidden="true" class="svg-icon m0 iconArrowDownLg" width="36" height="36" viewBox="0 0 36 36"><path d="M2 10h32L18 26z"/></svg></button>

        <button class="js-favorite-btn s-btn s-btn__unset c-pointer py8" aria-pressed="false" aria-label="favorite (6)" data-selected-classes="fc-yellow-600">
            <svg aria-hidden="true" class="svg-icon iconStar" width="18" height="18" viewBox="0 0 18 18"><path d="M9 12.65l-5.29 3.63 1.82-6.15L.44 6.22l6.42-.17L9 0l2.14 6.05 6.42.17-5.1 3.9 1.83 6.16z"/></svg>
            <div class="js-favorite-count mt8" data-value="6">6</div>
        </button>


</div>

            </div>

            
<div class="postcell post-layout--right">
    
    <div class="post-text" itemprop="text">

<p>What is the easiest way to show a <code>.jpg</code> or <code>.gif</code> image from Python console?</p>

<p>I've got a Python console program that is checking a data set which contains links to images stored locally. How should I write the script so that it would display images pop-up graphical windows?</p>
    </div>

        <div class="post-taglist grid gs4 gsy fd-column">
            <div class="grid ps-relative d-block">
                <a href="/questions/tagged/python" class="post-tag" title="show questions tagged &#39;python&#39;" rel="tag">python</a> <a href="/questions/tagged/image" class="post-tag" title="show questions tagged &#39;image&#39;" rel="tag">image</a> 
            </div>
        </div>

    <div class="mb0 ">
        <div class="mt16 pt4 grid gs8 gsy fw-wrap jc-end ai-start">
            <div class="grid--cell mr16" style="flex: 1 1 100px;">
<div class="post-menu"><a href="/q/1413540/11214460" title="short permalink to this question" class="short-link" itemprop="url" id="link-post-1413540">share</a><span class="lsep">|</span><a href="/posts/1413540/edit" class="suggest-edit-post" title="revise and improve this post">edit</a></div>
            </div>

            <div class="post-signature owner grid--cell">
<div class="user-info ">
    <div class="user-action-time">
        asked <span title="2009-09-11 22:22:50Z" class="relativetime">Sep 11 '09 at 22:22</span>
    </div>
    <div class="user-gravatar32">
        <a href="/users/85185/alex"><div class="gravatar-wrapper-32"><img src="https://www.gravatar.com/avatar/bd875b10ff6dc305e487ac1817885691?s=32&amp;d=identicon&amp;r=PG" alt="" width="32" height="32"></div></a>
    </div>
    <div class="user-details" itemprop="author" itemscope itemtype="http://schema.org/Person">
        <a href="/users/85185/alex">Alex</a><span class="d-none" itemprop="name">Alex</span>
        <div class="-flair">
            <span class="reputation-score" title="reputation score 14,973" dir="ltr">15k</span><span title="39 gold badges"><span class="badge1"></span><span class="badgecount">39</span></span><span title="88 silver badges"><span class="badge2"></span><span class="badgecount">88</span></span><span title="120 bronze badges"><span class="badge3"></span><span class="badgecount">120</span></span>
        </div>
    </div>
</div>

            </div>
        </div>
    </div>
    
</div>
                
    <div class="post-layout--right">
	    <div id="comments-1413540" class="comments js-comments-container  dno" data-post-id="1413540">
            <ul class="comments-list js-comments-list"
                    data-remaining-comments-count="0"
                    data-canpost="false"
                    data-cansee="true"
                    data-comments-unavailable="false"
                    data-addlink-disabled="true">

            </ul>
	    </div>

        <div id="comments-link-1413540" data-rep=50 data-reg=true>

                <a class="js-add-link comments-link disabled-link "
                   title="Use comments to ask for more information or suggest improvements. Avoid answering questions in comments."
                   >add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span>
            <a class="js-show-link comments-link dno" title="expand to show all comments on this post" href=# onclick=""></a>
        </div>         
    </div>        </div>
</div>


<div id="dfp-isb" class="everyonelovesstackoverflow everyoneloves__inline-sidebar"></div>
            <div id="answers">

                <a name="tab-top"></a>
                <div id="answers-header">
                    <div class="subheader answers-subheader">
                        <h2 data-answercount="10">
                                10 Answers
                            <span style="display:none;" itemprop="answerCount">10</span>
                        </h2>
                        <div>
                            
<div id="tabs">
        <a href="/questions/1413540/showing-an-image-from-console-in-python?answertab=active#tab-top" data-nav-xhref="" title="Answers with the latest activity first" data-value="active" data-shortcut="A">
            active</a>
        <a href="/questions/1413540/showing-an-image-from-console-in-python?answertab=oldest#tab-top" data-nav-xhref="" title="Answers in the order they were provided" data-value="oldest" data-shortcut="O">
            oldest</a>
        <a class="youarehere is-selected " href="/questions/1413540/showing-an-image-from-console-in-python?answertab=votes#tab-top" data-nav-xhref="" title="Answers with the highest score first" data-value="votes" data-shortcut="V">
            votes</a>
    </div>

                        </div>
                    </div>
                </div>




  
<a name="1413567"></a>
<div id="answer-1413567" class="answer accepted-answer" data-answerid="1413567"  itemprop="acceptedAnswer" itemscope itemtype="http://schema.org/Answer">
    <div class="post-layout">
            <div class="votecell post-layout--left">
                

<div class="js-voting-container grid fd-column ai-stretch gs4 fc-black-200" data-post-id="1413567">
        <button class="js-vote-up-btn grid--cell s-btn s-btn__unset c-pointer" title="This answer is useful (click again to undo)" aria-pressed="false" aria-label="up vote" data-selected-classes="fc-theme-primary"><svg aria-hidden="true" class="svg-icon m0 iconArrowUpLg" width="36" height="36" viewBox="0 0 36 36"><path d="M2 26h32L18 10z"/></svg></button>
        <div class="js-vote-count grid--cell fc-black-500 fs-title grid fd-column ai-center" itemprop="upvoteCount" data-value="46">46</div>
        <button class="js-vote-down-btn grid--cell s-btn s-btn__unset c-pointer" title="This answer is not useful (click again to undo)" aria-pressed="false" aria-label="down vote" data-selected-classes="fc-theme-primary"><svg aria-hidden="true" class="svg-icon m0 iconArrowDownLg" width="36" height="36" viewBox="0 0 36 36"><path d="M2 10h32L18 26z"/></svg></button>


                <div class="js-accepted-answer-indicator grid--item fc-green-500 ta-center p4" title="loading when this answer was accepted..." tabindex="0" role="note" aria-label="accepted"><svg aria-hidden="true" class="svg-icon iconCheckmarkLg" width="36" height="36" viewBox="0 0 36 36"><path d="M6 14l8 8L30 6v8L14 30l-8-8z"/></svg></div>

</div>

            </div>
            

<div class="answercell post-layout--right">
    
    <div class="post-text" itemprop="text">
<p>Using the awesome <a href="https://pypi.python.org/pypi/Pillow/2.7.0" rel="noreferrer">Pillow</a> library:</p>

<pre><code>&gt;&gt;&gt; from PIL import Image                                                                                
&gt;&gt;&gt; img = Image.open('test.png')
&gt;&gt;&gt; img.show() 
</code></pre>

<p>This will open the image in your default image viewer.</p>
    </div>
    <div class="grid mb0 fw-wrap ai-start jc-end gs8 gsy">
        <time itemprop="dateCreated" datetime="2009-09-11T22:34:22"></time>
    <div class="grid--cell mr16" style="flex: 1 1 100px;">
<div class="post-menu"><a href="/a/1413567/11214460" title="short permalink to this answer" class="short-link" itemprop="url" id="link-post-1413567">share</a><span class="lsep">|</span><a href="/posts/1413567/edit" class="suggest-edit-post" title="revise and improve this post">edit</a></div>                    </div>
    <div class="post-signature grid--cell fl0">
<div class="user-info ">
    <div class="user-action-time">
        <a href="/posts/1413567/revisions" title="show all edits to this post">edited <span title="2015-02-15 00:56:18Z" class="relativetime">Feb 15 '15 at 0:56</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        
        <div class="-flair">
            
        </div>
    </div>
</div>    </div>
            


    <div class="post-signature grid--cell fl0">
<div class="user-info user-hover">
    <div class="user-action-time">
        answered <span title="2009-09-11 22:34:22Z" class="relativetime">Sep 11 '09 at 22:34</span>
    </div>
    <div class="user-gravatar32">
        <a href="/users/75956/steven-kryskalla"><div class="gravatar-wrapper-32"><img src="https://www.gravatar.com/avatar/4015fc1dc568f855138f29a688e91af8?s=32&amp;d=identicon&amp;r=PG" alt="" width="32" height="32"></div></a>
    </div>
    <div class="user-details" itemprop="author" itemscope itemtype="http://schema.org/Person">
        <a href="/users/75956/steven-kryskalla">Steven Kryskalla</a><span class="d-none" itemprop="name">Steven Kryskalla</span>
        <div class="-flair">
            <span class="reputation-score" title="reputation score 10,850" dir="ltr">10.9k</span><span title="1 gold badge"><span class="badge1"></span><span class="badgecount">1</span></span><span title="30 silver badges"><span class="badge2"></span><span class="badgecount">30</span></span><span title="36 bronze badges"><span class="badge3"></span><span class="badgecount">36</span></span>
        </div>
    </div>
</div>

    </div>
    </div>
    
</div>

    
    <div class="post-layout--right">
	    <div id="comments-1413567" class="comments js-comments-container  dno" data-post-id="1413567">
            <ul class="comments-list js-comments-list"
                    data-remaining-comments-count="0"
                    data-canpost="false"
                    data-cansee="true"
                    data-comments-unavailable="false"
                    data-addlink-disabled="true">

            </ul>
	    </div>

        <div id="comments-link-1413567" data-rep=50 data-reg=true>

                <a class="js-add-link comments-link disabled-link "
                   title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”."
                   >add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span>
            <a class="js-show-link comments-link dno" title="expand to show all comments on this post" href=# onclick=""></a>
        </div>         
    </div>    </div>
</div>
<div id="dfp-mlb" class="everyonelovesstackoverflow everyoneloves__mid-leaderboard"></div>
  
<a name="13843577"></a>
<div id="answer-13843577" class="answer" data-answerid="13843577"  itemprop="suggestedAnswer" itemscope itemtype="http://schema.org/Answer">
    <div class="post-layout">
            <div class="votecell post-layout--left">
                

<div class="js-voting-container grid fd-column ai-stretch gs4 fc-black-200" data-post-id="13843577">
        <button class="js-vote-up-btn grid--cell s-btn s-btn__unset c-pointer" title="This answer is useful (click again to undo)" aria-pressed="false" aria-label="up vote" data-selected-classes="fc-theme-primary"><svg aria-hidden="true" class="svg-icon m0 iconArrowUpLg" width="36" height="36" viewBox="0 0 36 36"><path d="M2 26h32L18 10z"/></svg></button>
        <div class="js-vote-count grid--cell fc-black-500 fs-title grid fd-column ai-center" itemprop="upvoteCount" data-value="8">8</div>
        <button class="js-vote-down-btn grid--cell s-btn s-btn__unset c-pointer" title="This answer is not useful (click again to undo)" aria-pressed="false" aria-label="down vote" data-selected-classes="fc-theme-primary"><svg aria-hidden="true" class="svg-icon m0 iconArrowDownLg" width="36" height="36" viewBox="0 0 36 36"><path d="M2 10h32L18 26z"/></svg></button>


                <div class="js-accepted-answer-indicator grid--item fc-green-500 ta-center p4 d-none" title="loading when this answer was accepted..." tabindex="0" role="note" aria-label="accepted"><svg aria-hidden="true" class="svg-icon iconCheckmarkLg" width="36" height="36" viewBox="0 0 36 36"><path d="M6 14l8 8L30 6v8L14 30l-8-8z"/></svg></div>

</div>

            </div>
            

<div class="answercell post-layout--right">
    
    <div class="post-text" itemprop="text">
<p>In Xterm-compatible terminals, you can show the image directly in the terminal. See <a href="https://stackoverflow.com/a/13843534/309483">my answer to "PPM image to ASCII art in Python"</a></p>

<p><img src="https://i.stack.imgur.com/3mwxc.png" alt="ImageMagick&#39;s &quot;logo:&quot; image in Xterm (show picture in new tab for full size viewing)"></p>
    </div>
    <div class="grid mb0 fw-wrap ai-start jc-end gs8 gsy">
        <time itemprop="dateCreated" datetime="2012-12-12T15:54:58"></time>
    <div class="grid--cell mr16" style="flex: 1 1 100px;">
<div class="post-menu"><a href="/a/13843577/11214460" title="short permalink to this answer" class="short-link" itemprop="url" id="link-post-13843577">share</a><span class="lsep">|</span><a href="/posts/13843577/edit" class="suggest-edit-post" title="revise and improve this post">edit</a></div>                    </div>
    <div class="post-signature grid--cell fl0">
<div class="user-info user-hover">
    <div class="user-action-time">
        <a href="/posts/13843577/revisions" title="show all edits to this post">edited <span title="2017-05-23 12:18:17Z" class="relativetime">May 23 '17 at 12:18</span></a>
    </div>
    <div class="user-gravatar32">
        <a href="/users/-1/community"><div class="gravatar-wrapper-32"><img src="https://www.gravatar.com/avatar/a007be5a61f6aa8f3e85ae2fc18dd66e?s=32&amp;d=identicon&amp;r=PG" alt="" width="32" height="32"></div></a>
    </div>
    <div class="user-details">
        <a href="/users/-1/community">Community</a><span class="mod-flair" title="moderator">&#9830;</span>
        <div class="-flair">
            <span class="reputation-score" title="reputation score " dir="ltr">1</span><span title="1 silver badge"><span class="badge2"></span><span class="badgecount">1</span></span>
        </div>
    </div>
</div>    </div>
            


    <div class="post-signature grid--cell fl0">
<div class="user-info user-hover">
    <div class="user-action-time">
        answered <span title="2012-12-12 15:54:58Z" class="relativetime">Dec 12 '12 at 15:54</span>
    </div>
    <div class="user-gravatar32">
        <a href="/users/309483/janus-troelsen"><div class="gravatar-wrapper-32"><img src="https://www.gravatar.com/avatar/d797538504a367f277d19bd8369e9a19?s=32&amp;d=identicon&amp;r=PG" alt="" width="32" height="32"></div></a>
    </div>
    <div class="user-details" itemprop="author" itemscope itemtype="http://schema.org/Person">
        <a href="/users/309483/janus-troelsen">Janus Troelsen</a><span class="d-none" itemprop="name">Janus Troelsen</span>
        <div class="-flair">
            <span class="reputation-score" title="reputation score 13,980" dir="ltr">14k</span><span title="5 gold badges"><span class="badge1"></span><span class="badgecount">5</span></span><span title="100 silver badges"><span class="badge2"></span><span class="badgecount">100</span></span><span title="159 bronze badges"><span class="badge3"></span><span class="badgecount">159</span></span>
        </div>
    </div>
</div>

    </div>
    </div>
    
</div>

    
    <div class="post-layout--right">
	    <div id="comments-13843577" class="comments js-comments-container  dno" data-post-id="13843577">
            <ul class="comments-list js-comments-list"
                    data-remaining-comments-count="0"
                    data-canpost="false"
                    data-cansee="true"
                    data-comments-unavailable="false"
                    data-addlink-disabled="true">

            </ul>
	    </div>

        <div id="comments-link-13843577" data-rep=50 data-reg=true>

                <a class="js-add-link comments-link disabled-link "
                   title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”."
                   >add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span>
            <a class="js-show-link comments-link dno" title="expand to show all comments on this post" href=# onclick=""></a>
        </div>         
    </div>    </div>
</div>

  
<a name="37520984"></a>
<div id="answer-37520984" class="answer" data-answerid="37520984"  itemprop="suggestedAnswer" itemscope itemtype="http://schema.org/Answer">
    <div class="post-layout">
            <div class="votecell post-layout--left">
                

<div class="js-voting-container grid fd-column ai-stretch gs4 fc-black-200" data-post-id="37520984">
        <button class="js-vote-up-btn grid--cell s-btn s-btn__unset c-pointer" title="This answer is useful (click again to undo)" aria-pressed="false" aria-label="up vote" data-selected-classes="fc-theme-primary"><svg aria-hidden="true" class="svg-icon m0 iconArrowUpLg" width="36" height="36" viewBox="0 0 36 36"><path d="M2 26h32L18 10z"/></svg></button>
        <div class="js-vote-count grid--cell fc-black-500 fs-title grid fd-column ai-center" itemprop="upvoteCount" data-value="7">7</div>
        <button class="js-vote-down-btn grid--cell s-btn s-btn__unset c-pointer" title="This answer is not useful (click again to undo)" aria-pressed="false" aria-label="down vote" data-selected-classes="fc-theme-primary"><svg aria-hidden="true" class="svg-icon m0 iconArrowDownLg" width="36" height="36" viewBox="0 0 36 36"><path d="M2 10h32L18 26z"/></svg></button>


                <div class="js-accepted-answer-indicator grid--item fc-green-500 ta-center p4 d-none" title="loading when this answer was accepted..." tabindex="0" role="note" aria-label="accepted"><svg aria-hidden="true" class="svg-icon iconCheckmarkLg" width="36" height="36" viewBox="0 0 36 36"><path d="M6 14l8 8L30 6v8L14 30l-8-8z"/></svg></div>

</div>

            </div>
            

<div class="answercell post-layout--right">
    
    <div class="post-text" itemprop="text">
<h2>In a new window using Pillow/PIL</h2>

<p>Install <a href="https://pypi.python.org/pypi/Pillow/2.7.0" rel="noreferrer">Pillow</a> (or PIL), e.g.:</p>

<pre><code>$ pip install pillow
</code></pre>

<p>Now you can</p>

<pre><code>from PIL import Image
with Image.open('path/to/file.jpg') as img:
    img.show()
</code></pre>

<h2>Using native apps</h2>

<p>Other common alternatives include running <code>xdg-open</code> or starting the browser with the image path:</p>

<pre><code>import webbrowser
webbrowser.open('path/to/file.jpg')
</code></pre>

<h2>Inline a Linux console</h2>

<p>If you really want to show the image inline in the console and not as a new window, you may do that but only in a <a href="https://en.wikipedia.org/wiki/Linux_console" rel="noreferrer">Linux console</a> using <a href="http://www.nongnu.org/fbi-improved/" rel="noreferrer"><code>fbi</code></a> see <a href="https://askubuntu.com/questions/97542/how-do-i-make-my-terminal-display-graphical-pictures">ask Ubuntu</a> or else use ASCII-art like <a href="http://manpages.ubuntu.com/manpages/wily/man1/cacaview.1.html" rel="noreferrer">CACA</a>.</p>
    </div>
    <div class="grid mb0 fw-wrap ai-start jc-end gs8 gsy">
        <time itemprop="dateCreated" datetime="2016-05-30T08:27:31"></time>
    <div class="grid--cell mr16" style="flex: 1 1 100px;">
<div class="post-menu"><a href="/a/37520984/11214460" title="short permalink to this answer" class="short-link" itemprop="url" id="link-post-37520984">share</a><span class="lsep">|</span><a href="/posts/37520984/edit" class="suggest-edit-post" title="revise and improve this post">edit</a></div>                    </div>
            


    <div class="post-signature grid--cell fl0">
<div class="user-info user-hover">
    <div class="user-action-time">
        answered <span title="2016-05-30 08:27:31Z" class="relativetime">May 30 '16 at 8:27</span>
    </div>
    <div class="user-gravatar32">
        <a href="/users/167897/wernight"><div class="gravatar-wrapper-32"><img src="https://www.gravatar.com/avatar/be1e7ef6ee96f64e1b60d947df30bac0?s=32&amp;d=identicon&amp;r=PG" alt="" width="32" height="32"></div></a>
    </div>
    <div class="user-details" itemprop="author" itemscope itemtype="http://schema.org/Person">
        <a href="/users/167897/wernight">Wernight</a><span class="d-none" itemprop="name">Wernight</span>
        <div class="-flair">
            <span class="reputation-score" title="reputation score 22,665" dir="ltr">22.7k</span><span title="18 gold badges"><span class="badge1"></span><span class="badgecount">18</span></span><span title="100 silver badges"><span class="badge2"></span><span class="badgecount">100</span></span><span title="119 bronze badges"><span class="badge3"></span><span class="badgecount">119</span></span>
        </div>
    </div>
</div>

    </div>
    </div>
    
</div>

    
    <div class="post-layout--right">
	    <div id="comments-37520984" class="comments js-comments-container  dno" data-post-id="37520984">
            <ul class="comments-list js-comments-list"
                    data-remaining-comments-count="0"
                    data-canpost="false"
                    data-cansee="true"
                    data-comments-unavailable="false"
                    data-addlink-disabled="true">

            </ul>
	    </div>

        <div id="comments-link-37520984" data-rep=50 data-reg=true>

                <a class="js-add-link comments-link disabled-link "
                   title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”."
                   >add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span>
            <a class="js-show-link comments-link dno" title="expand to show all comments on this post" href=# onclick=""></a>
        </div>         
    </div>    </div>
</div>

  
<a name="1413639"></a>
<div id="answer-1413639" class="answer" data-answerid="1413639"  itemprop="suggestedAnswer" itemscope itemtype="http://schema.org/Answer">
    <div class="post-layout">
            <div class="votecell post-layout--left">
                

<div class="js-voting-container grid fd-column ai-stretch gs4 fc-black-200" data-post-id="1413639">
        <button class="js-vote-up-btn grid--cell s-btn s-btn__unset c-pointer" title="This answer is useful (click again to undo)" aria-pressed="false" aria-label="up vote" data-selected-classes="fc-theme-primary"><svg aria-hidden="true" class="svg-icon m0 iconArrowUpLg" width="36" height="36" viewBox="0 0 36 36"><path d="M2 26h32L18 10z"/></svg></button>
        <div class="js-vote-count grid--cell fc-black-500 fs-title grid fd-column ai-center" itemprop="upvoteCount" data-value="6">6</div>
        <button class="js-vote-down-btn grid--cell s-btn s-btn__unset c-pointer" title="This answer is not useful (click again to undo)" aria-pressed="false" aria-label="down vote" data-selected-classes="fc-theme-primary"><svg aria-hidden="true" class="svg-icon m0 iconArrowDownLg" width="36" height="36" viewBox="0 0 36 36"><path d="M2 10h32L18 26z"/></svg></button>


                <div class="js-accepted-answer-indicator grid--item fc-green-500 ta-center p4 d-none" title="loading when this answer was accepted..." tabindex="0" role="note" aria-label="accepted"><svg aria-hidden="true" class="svg-icon iconCheckmarkLg" width="36" height="36" viewBox="0 0 36 36"><path d="M6 14l8 8L30 6v8L14 30l-8-8z"/></svg></div>

</div>

            </div>
            

<div class="answercell post-layout--right">
    
    <div class="post-text" itemprop="text">
<p>Or simply execute the image through the shell, as in </p>

<pre><code>import subprocess
subprocess.call([ fname ], shell=True)
</code></pre>

<p>and whatever program is installed to handle images will be launched.</p>
    </div>
    <div class="grid mb0 fw-wrap ai-start jc-end gs8 gsy">
        <time itemprop="dateCreated" datetime="2009-09-11T22:53:41"></time>
    <div class="grid--cell mr16" style="flex: 1 1 100px;">
<div class="post-menu"><a href="/a/1413639/11214460" title="short permalink to this answer" class="short-link" itemprop="url" id="link-post-1413639">share</a><span class="lsep">|</span><a href="/posts/1413639/edit" class="suggest-edit-post" title="revise and improve this post">edit</a></div>                    </div>
            


    <div class="post-signature grid--cell fl0">
<div class="user-info ">
    <div class="user-action-time">
        answered <span title="2009-09-11 22:53:41Z" class="relativetime">Sep 11 '09 at 22:53</span>
    </div>
    <div class="user-gravatar32">
        <a href="/users/95612/jochen-ritzel"><div class="gravatar-wrapper-32"><img src="https://www.gravatar.com/avatar/e2166d0ea599ad4b0c57054b55f0600f?s=32&amp;d=identicon&amp;r=PG" alt="" width="32" height="32"></div></a>
    </div>
    <div class="user-details" itemprop="author" itemscope itemtype="http://schema.org/Person">
        <a href="/users/95612/jochen-ritzel">Jochen Ritzel</a><span class="d-none" itemprop="name">Jochen Ritzel</span>
        <div class="-flair">
            <span class="reputation-score" title="reputation score 78,386" dir="ltr">78.4k</span><span title="22 gold badges"><span class="badge1"></span><span class="badgecount">22</span></span><span title="159 silver badges"><span class="badge2"></span><span class="badgecount">159</span></span><span title="165 bronze badges"><span class="badge3"></span><span class="badgecount">165</span></span>
        </div>
    </div>
</div>

    </div>
    </div>
    
</div>

    
    <div class="post-layout--right">
	    <div id="comments-1413639" class="comments js-comments-container " data-post-id="1413639">
            <ul class="comments-list js-comments-list"
                    data-remaining-comments-count="0"
                    data-canpost="false"
                    data-cansee="true"
                    data-comments-unavailable="false"
                    data-addlink-disabled="true">


    <li id="comment-1256796" class="comment js-comment " data-comment-id="1256796">
        <div class="js-comment-actions comment-actions">
            <div class="comment-score js-comment-edit-hide">
            </div>
                    </div>
        <div class="comment-text js-comment-text-and-form">
            <div class="comment-body js-comment-edit-hide">
                
                <span class="comment-copy">This solution is Windows specific (namely for cmd.exe as a shell) It won&#39;t work on common *nix shells in default configuration e.g., sh, bash, etc.</span>
                
                    &ndash;&nbsp;<a href="/users/4279/jfs"
                       title="273,798 reputation"
                       class="comment-user">jfs</a>
                <span class="comment-date" dir="ltr"><span title="2009-09-12 03:45:03Z" class="relativetime-clean">Sep 12 '09 at 3:45</span></span>
                                                            </div>
        </div>
    </li>
            </ul>
	    </div>

        <div id="comments-link-1413639" data-rep=50 data-reg=true>

                <a class="js-add-link comments-link disabled-link "
                   title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”."
                   >add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span>
            <a class="js-show-link comments-link dno" title="expand to show all comments on this post" href=# onclick=""></a>
        </div>         
    </div>    </div>
</div>

  
<a name="1413575"></a>
<div id="answer-1413575" class="answer" data-answerid="1413575"  itemprop="suggestedAnswer" itemscope itemtype="http://schema.org/Answer">
    <div class="post-layout">
            <div class="votecell post-layout--left">
                

<div class="js-voting-container grid fd-column ai-stretch gs4 fc-black-200" data-post-id="1413575">
        <button class="js-vote-up-btn grid--cell s-btn s-btn__unset c-pointer" title="This answer is useful (click again to undo)" aria-pressed="false" aria-label="up vote" data-selected-classes="fc-theme-primary"><svg aria-hidden="true" class="svg-icon m0 iconArrowUpLg" width="36" height="36" viewBox="0 0 36 36"><path d="M2 26h32L18 10z"/></svg></button>
        <div class="js-vote-count grid--cell fc-black-500 fs-title grid fd-column ai-center" itemprop="upvoteCount" data-value="6">6</div>
        <button class="js-vote-down-btn grid--cell s-btn s-btn__unset c-pointer" title="This answer is not useful (click again to undo)" aria-pressed="false" aria-label="down vote" data-selected-classes="fc-theme-primary"><svg aria-hidden="true" class="svg-icon m0 iconArrowDownLg" width="36" height="36" viewBox="0 0 36 36"><path d="M2 10h32L18 26z"/></svg></button>


                <div class="js-accepted-answer-indicator grid--item fc-green-500 ta-center p4 d-none" title="loading when this answer was accepted..." tabindex="0" role="note" aria-label="accepted"><svg aria-hidden="true" class="svg-icon iconCheckmarkLg" width="36" height="36" viewBox="0 0 36 36"><path d="M6 14l8 8L30 6v8L14 30l-8-8z"/></svg></div>

</div>

            </div>
            

<div class="answercell post-layout--right">
    
    <div class="post-text" itemprop="text">
<p>Why not just display it in the user's web browser?</p>
    </div>
    <div class="grid mb0 fw-wrap ai-start jc-end gs8 gsy">
        <time itemprop="dateCreated" datetime="2009-09-11T22:36:26"></time>
    <div class="grid--cell mr16" style="flex: 1 1 100px;">
<div class="post-menu"><a href="/a/1413575/11214460" title="short permalink to this answer" class="short-link" itemprop="url" id="link-post-1413575">share</a><span class="lsep">|</span><a href="/posts/1413575/edit" class="suggest-edit-post" title="revise and improve this post">edit</a></div>                    </div>
            


    <div class="post-signature grid--cell fl0">
<div class="user-info user-hover">
    <div class="user-action-time">
        answered <span title="2009-09-11 22:36:26Z" class="relativetime">Sep 11 '09 at 22:36</span>
    </div>
    <div class="user-gravatar32">
        <a href="/users/64290/anthony"><div class="gravatar-wrapper-32"><img src="https://www.gravatar.com/avatar/237d488fb44889ba4fd7472e37c438ce?s=32&amp;d=identicon&amp;r=PG" alt="" width="32" height="32"></div></a>
    </div>
    <div class="user-details" itemprop="author" itemscope itemtype="http://schema.org/Person">
        <a href="/users/64290/anthony">anthony</a><span class="d-none" itemprop="name">anthony</span>
        <div class="-flair">
            <span class="reputation-score" title="reputation score 31,576" dir="ltr">31.6k</span><span title="4 gold badges"><span class="badge1"></span><span class="badgecount">4</span></span><span title="45 silver badges"><span class="badge2"></span><span class="badgecount">45</span></span><span title="120 bronze badges"><span class="badge3"></span><span class="badgecount">120</span></span>
        </div>
    </div>
</div>

    </div>
    </div>
    
</div>

    
    <div class="post-layout--right">
	    <div id="comments-1413575" class="comments js-comments-container " data-post-id="1413575">
            <ul class="comments-list js-comments-list"
                    data-remaining-comments-count="0"
                    data-canpost="false"
                    data-cansee="true"
                    data-comments-unavailable="false"
                    data-addlink-disabled="true">


    <li id="comment-1256834" class="comment js-comment " data-comment-id="1256834">
        <div class="js-comment-actions comment-actions">
            <div class="comment-score js-comment-edit-hide">
                    <span title="number of &#39;useful comment&#39; votes received"
                            class="cool">1</span>
            </div>
                    </div>
        <div class="comment-text js-comment-text-and-form">
            <div class="comment-body js-comment-edit-hide">
                
                <span class="comment-copy">Indeed, <code>webbrowser.open()</code> works perfectly for any file type you can open from browser: images, video, office documents, mp3, etc (it starts corresponding program e.g., MPlayer for video files).</span>
                
                    &ndash;&nbsp;<a href="/users/4279/jfs"
                       title="273,798 reputation"
                       class="comment-user">jfs</a>
                <span class="comment-date" dir="ltr"><span title="2009-09-12 03:56:57Z" class="relativetime-clean">Sep 12 '09 at 3:56</span></span>
                                                            </div>
        </div>
    </li>
    <li id="comment-37747789" class="comment js-comment " data-comment-id="37747789">
        <div class="js-comment-actions comment-actions">
            <div class="comment-score js-comment-edit-hide">
            </div>
                    </div>
        <div class="comment-text js-comment-text-and-form">
            <div class="comment-body js-comment-edit-hide">
                
                <span class="comment-copy">I think this is pretty neat, lateral thinking.   It only works with absolute paths though.</span>
                
                    &ndash;&nbsp;<a href="/users/554807/greenasjade"
                       title="11,643 reputation"
                       class="comment-user">GreenAsJade</a>
                <span class="comment-date" dir="ltr"><span title="2014-06-25 07:41:26Z" class="relativetime-clean">Jun 25 '14 at 7:41</span></span>
                                                            </div>
        </div>
    </li>
    <li id="comment-51244957" class="comment js-comment " data-comment-id="51244957">
        <div class="js-comment-actions comment-actions">
            <div class="comment-score js-comment-edit-hide">
            </div>
                    </div>
        <div class="comment-text js-comment-text-and-form">
            <div class="comment-body js-comment-edit-hide">
                
                <span class="comment-copy">I was expecting that <code>webbrowser.open(&quot;Figure.png&quot;)</code> would open the figure via my default internet browser. Instead, the figure was opened via the default image viewer. Do you know why? I am on Windows.</span>
                
                    &ndash;&nbsp;<a href="/users/1585017/multigoodverse"
                       title="1,901 reputation"
                       class="comment-user">multigoodverse</a>
                <span class="comment-date" dir="ltr"><span title="2015-07-27 09:44:57Z" class="relativetime-clean">Jul 27 '15 at 9:44</span></span>
                        <span title="this comment was edited 1 time">
                            <svg aria-hidden="true" class="svg-icon va-text-bottom o50 iconPencilSm" width="14" height="14" viewBox="0 0 14 14"><path d="M8.37 3.7L2 10.11V12h1.88l6.37-6.43zM12.23 2.83L11.1 1.71a.5.5 0 0 0-.7 0L9.2 2.86l1.88 1.84 1.14-1.16a.5.5 0 0 0 0-.71z"/></svg>
                        </span>
                                                            </div>
        </div>
    </li>
    <li id="comment-55330809" class="comment js-comment " data-comment-id="55330809">
        <div class="js-comment-actions comment-actions">
            <div class="comment-score js-comment-edit-hide">
                    <span title="number of &#39;useful comment&#39; votes received"
                            class="cool">1</span>
            </div>
                    </div>
        <div class="comment-text js-comment-text-and-form">
            <div class="comment-body js-comment-edit-hide">
                
                <span class="comment-copy"><code>webbrowser</code> has the <code>webbrowser._tryorder</code> which contains the order of programs it will try. On my computer it has <code>[&#39;xdg-open&#39;, &#39;gvfs-open&#39;, ... </code>, so the <code>xdg-open</code> program is called first. And that program further calls <code>eog</code> on my computer.</span>
                
                    &ndash;&nbsp;<a href="/users/589165/finn-%c3%85rup-nielsen"
                       title="3,248 reputation"
                       class="comment-user">Finn &#197;rup Nielsen</a>
                <span class="comment-date" dir="ltr"><span title="2015-11-18 14:06:50Z" class="relativetime-clean">Nov 18 '15 at 14:06</span></span>
                                                            </div>
        </div>
    </li>
            </ul>
	    </div>

        <div id="comments-link-1413575" data-rep=50 data-reg=true>

                <a class="js-add-link comments-link disabled-link "
                   title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”."
                   >add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span>
            <a class="js-show-link comments-link dno" title="expand to show all comments on this post" href=# onclick=""></a>
        </div>         
    </div>    </div>
</div>

  
<a name="1413693"></a>
<div id="answer-1413693" class="answer" data-answerid="1413693"  itemprop="suggestedAnswer" itemscope itemtype="http://schema.org/Answer">
    <div class="post-layout">
            <div class="votecell post-layout--left">
                

<div class="js-voting-container grid fd-column ai-stretch gs4 fc-black-200" data-post-id="1413693">
        <button class="js-vote-up-btn grid--cell s-btn s-btn__unset c-pointer" title="This answer is useful (click again to undo)" aria-pressed="false" aria-label="up vote" data-selected-classes="fc-theme-primary"><svg aria-hidden="true" class="svg-icon m0 iconArrowUpLg" width="36" height="36" viewBox="0 0 36 36"><path d="M2 26h32L18 10z"/></svg></button>
        <div class="js-vote-count grid--cell fc-black-500 fs-title grid fd-column ai-center" itemprop="upvoteCount" data-value="6">6</div>
        <button class="js-vote-down-btn grid--cell s-btn s-btn__unset c-pointer" title="This answer is not useful (click again to undo)" aria-pressed="false" aria-label="down vote" data-selected-classes="fc-theme-primary"><svg aria-hidden="true" class="svg-icon m0 iconArrowDownLg" width="36" height="36" viewBox="0 0 36 36"><path d="M2 10h32L18 26z"/></svg></button>


                <div class="js-accepted-answer-indicator grid--item fc-green-500 ta-center p4 d-none" title="loading when this answer was accepted..." tabindex="0" role="note" aria-label="accepted"><svg aria-hidden="true" class="svg-icon iconCheckmarkLg" width="36" height="36" viewBox="0 0 36 36"><path d="M6 14l8 8L30 6v8L14 30l-8-8z"/></svg></div>

</div>

            </div>
            

<div class="answercell post-layout--right">
    
    <div class="post-text" itemprop="text">
<p>Since you are probably running Windows (from looking at your tags), this would be the easiest way to open and show an image file from the console without installing extra stuff like PIL.</p>

<pre><code>import os
os.system('start pic.png')
</code></pre>
    </div>
    <div class="grid mb0 fw-wrap ai-start jc-end gs8 gsy">
        <time itemprop="dateCreated" datetime="2009-09-11T23:21:46"></time>
    <div class="grid--cell mr16" style="flex: 1 1 100px;">
<div class="post-menu"><a href="/a/1413693/11214460" title="short permalink to this answer" class="short-link" itemprop="url" id="link-post-1413693">share</a><span class="lsep">|</span><a href="/posts/1413693/edit" class="suggest-edit-post" title="revise and improve this post">edit</a></div>                    </div>
            


    <div class="post-signature grid--cell fl0">
<div class="user-info ">
    <div class="user-action-time">
        answered <span title="2009-09-11 23:21:46Z" class="relativetime">Sep 11 '09 at 23:21</span>
    </div>
    <div class="user-gravatar32">
        <a href="/users/57757/unknown"><div class="gravatar-wrapper-32"><img src="https://www.gravatar.com/avatar/12d12320bb9a578802cfd9c8cb312e33?s=32&amp;d=identicon&amp;r=PG" alt="" width="32" height="32"></div></a>
    </div>
    <div class="user-details" itemprop="author" itemscope itemtype="http://schema.org/Person">
        <a href="/users/57757/unknown">Unknown</a><span class="d-none" itemprop="name">Unknown</span>
        <div class="-flair">
            <span class="reputation-score" title="reputation score 35,075" dir="ltr">35.1k</span><span title="22 gold badges"><span class="badge1"></span><span class="badgecount">22</span></span><span title="123 silver badges"><span class="badge2"></span><span class="badgecount">123</span></span><span title="169 bronze badges"><span class="badge3"></span><span class="badgecount">169</span></span>
        </div>
    </div>
</div>

    </div>
    </div>
    
</div>

    
    <div class="post-layout--right">
	    <div id="comments-1413693" class="comments js-comments-container " data-post-id="1413693">
            <ul class="comments-list js-comments-list"
                    data-remaining-comments-count="0"
                    data-canpost="false"
                    data-cansee="true"
                    data-comments-unavailable="false"
                    data-addlink-disabled="true">


    <li id="comment-1256848" class="comment js-comment " data-comment-id="1256848">
        <div class="js-comment-actions comment-actions">
            <div class="comment-score js-comment-edit-hide">
                    <span title="number of &#39;useful comment&#39; votes received"
                            class="warm">7</span>
            </div>
                    </div>
        <div class="comment-text js-comment-text-and-form">
            <div class="comment-body js-comment-edit-hide">
                
                <span class="comment-copy">subprocess is preferred to os.system in Python 2.4 and later.</span>
                
                    &ndash;&nbsp;<a href="/users/70170/jason-r-coombs"
                       title="30,221 reputation"
                       class="comment-user">Jason R. Coombs</a>
                <span class="comment-date" dir="ltr"><span title="2009-09-12 04:01:27Z" class="relativetime-clean">Sep 12 '09 at 4:01</span></span>
                                                            </div>
        </div>
    </li>
            </ul>
	    </div>

        <div id="comments-link-1413693" data-rep=50 data-reg=true>

                <a class="js-add-link comments-link disabled-link "
                   title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”."
                   >add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span>
            <a class="js-show-link comments-link dno" title="expand to show all comments on this post" href=# onclick=""></a>
        </div>         
    </div>    </div>
</div>

  
<a name="1413561"></a>
<div id="answer-1413561" class="answer" data-answerid="1413561"  itemprop="suggestedAnswer" itemscope itemtype="http://schema.org/Answer">
    <div class="post-layout">
            <div class="votecell post-layout--left">
                

<div class="js-voting-container grid fd-column ai-stretch gs4 fc-black-200" data-post-id="1413561">
        <button class="js-vote-up-btn grid--cell s-btn s-btn__unset c-pointer" title="This answer is useful (click again to undo)" aria-pressed="false" aria-label="up vote" data-selected-classes="fc-theme-primary"><svg aria-hidden="true" class="svg-icon m0 iconArrowUpLg" width="36" height="36" viewBox="0 0 36 36"><path d="M2 26h32L18 10z"/></svg></button>
        <div class="js-vote-count grid--cell fc-black-500 fs-title grid fd-column ai-center" itemprop="upvoteCount" data-value="5">5</div>
        <button class="js-vote-down-btn grid--cell s-btn s-btn__unset c-pointer" title="This answer is not useful (click again to undo)" aria-pressed="false" aria-label="down vote" data-selected-classes="fc-theme-primary"><svg aria-hidden="true" class="svg-icon m0 iconArrowDownLg" width="36" height="36" viewBox="0 0 36 36"><path d="M2 10h32L18 26z"/></svg></button>


                <div class="js-accepted-answer-indicator grid--item fc-green-500 ta-center p4 d-none" title="loading when this answer was accepted..." tabindex="0" role="note" aria-label="accepted"><svg aria-hidden="true" class="svg-icon iconCheckmarkLg" width="36" height="36" viewBox="0 0 36 36"><path d="M6 14l8 8L30 6v8L14 30l-8-8z"/></svg></div>

</div>

            </div>
            

<div class="answercell post-layout--right">
    
    <div class="post-text" itemprop="text">
<p>You cannot display images in a console window.
You need a graphical toolkit such as Tkinter, PyGTK, PyQt, PyKDE, wxPython, PyObjC or PyFLTK.
There are plenty of tutorial how to create siomple windows and loading images iun python.</p>
    </div>
    <div class="grid mb0 fw-wrap ai-start jc-end gs8 gsy">
        <time itemprop="dateCreated" datetime="2009-09-11T22:31:58"></time>
    <div class="grid--cell mr16" style="flex: 1 1 100px;">
<div class="post-menu"><a href="/a/1413561/11214460" title="short permalink to this answer" class="short-link" itemprop="url" id="link-post-1413561">share</a><span class="lsep">|</span><a href="/posts/1413561/edit" class="suggest-edit-post" title="revise and improve this post">edit</a></div>                    </div>
            


    <div class="post-signature grid--cell fl0">
<div class="user-info user-hover">
    <div class="user-action-time">
        answered <span title="2009-09-11 22:31:58Z" class="relativetime">Sep 11 '09 at 22:31</span>
    </div>
    <div class="user-gravatar32">
        <a href="/users/44952/codymanix"><div class="gravatar-wrapper-32"><img src="https://www.gravatar.com/avatar/ef35431926e50a1f953e88d22a32b936?s=32&amp;d=identicon&amp;r=PG" alt="" width="32" height="32"></div></a>
    </div>
    <div class="user-details" itemprop="author" itemscope itemtype="http://schema.org/Person">
        <a href="/users/44952/codymanix">codymanix</a><span class="d-none" itemprop="name">codymanix</span>
        <div class="-flair">
            <span class="reputation-score" title="reputation score 17,780" dir="ltr">17.8k</span><span title="14 gold badges"><span class="badge1"></span><span class="badgecount">14</span></span><span title="75 silver badges"><span class="badge2"></span><span class="badgecount">75</span></span><span title="132 bronze badges"><span class="badge3"></span><span class="badgecount">132</span></span>
        </div>
    </div>
</div>

    </div>
    </div>
    
</div>

    
    <div class="post-layout--right">
	    <div id="comments-1413561" class="comments js-comments-container " data-post-id="1413561">
            <ul class="comments-list js-comments-list"
                    data-remaining-comments-count="0"
                    data-canpost="false"
                    data-cansee="true"
                    data-comments-unavailable="false"
                    data-addlink-disabled="true">


    <li id="comment-96512679" class="comment js-comment " data-comment-id="96512679">
        <div class="js-comment-actions comment-actions">
            <div class="comment-score js-comment-edit-hide">
            </div>
                    </div>
        <div class="comment-text js-comment-text-and-form">
            <div class="comment-body js-comment-edit-hide">
                
                <span class="comment-copy">This doesn&#39;t answer the question though.</span>
                
                    &ndash;&nbsp;<a href="/users/6898443/jonathan"
                       title="355 reputation"
                       class="comment-user">jonathan</a>
                <span class="comment-date" dir="ltr"><span title="2019-02-25 16:58:25Z" class="relativetime-clean">Feb 25 at 16:58</span></span>
                                                            </div>
        </div>
    </li>
            </ul>
	    </div>

        <div id="comments-link-1413561" data-rep=50 data-reg=true>

                <a class="js-add-link comments-link disabled-link "
                   title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”."
                   >add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span>
            <a class="js-show-link comments-link dno" title="expand to show all comments on this post" href=# onclick=""></a>
        </div>         
    </div>    </div>
</div>

  
<a name="42060466"></a>
<div id="answer-42060466" class="answer" data-answerid="42060466"  itemprop="suggestedAnswer" itemscope itemtype="http://schema.org/Answer">
    <div class="post-layout">
            <div class="votecell post-layout--left">
                

<div class="js-voting-container grid fd-column ai-stretch gs4 fc-black-200" data-post-id="42060466">
        <button class="js-vote-up-btn grid--cell s-btn s-btn__unset c-pointer" title="This answer is useful (click again to undo)" aria-pressed="false" aria-label="up vote" data-selected-classes="fc-theme-primary"><svg aria-hidden="true" class="svg-icon m0 iconArrowUpLg" width="36" height="36" viewBox="0 0 36 36"><path d="M2 26h32L18 10z"/></svg></button>
        <div class="js-vote-count grid--cell fc-black-500 fs-title grid fd-column ai-center" itemprop="upvoteCount" data-value="2">2</div>
        <button class="js-vote-down-btn grid--cell s-btn s-btn__unset c-pointer" title="This answer is not useful (click again to undo)" aria-pressed="false" aria-label="down vote" data-selected-classes="fc-theme-primary"><svg aria-hidden="true" class="svg-icon m0 iconArrowDownLg" width="36" height="36" viewBox="0 0 36 36"><path d="M2 10h32L18 26z"/></svg></button>


                <div class="js-accepted-answer-indicator grid--item fc-green-500 ta-center p4 d-none" title="loading when this answer was accepted..." tabindex="0" role="note" aria-label="accepted"><svg aria-hidden="true" class="svg-icon iconCheckmarkLg" width="36" height="36" viewBox="0 0 36 36"><path d="M6 14l8 8L30 6v8L14 30l-8-8z"/></svg></div>

</div>

            </div>
            

<div class="answercell post-layout--right">
    
    <div class="post-text" itemprop="text">
<p>I made a simple tool that will display an image given a <strong>filename</strong> or <strong>image object</strong> or <strong>url</strong>.<br>
It's crude, but it'll do in a hurry.</p>

<p>Installation:</p>

<pre><code> $ pip install simple-imshow
</code></pre>

<p>Usage:</p>

<pre><code>from simshow import simshow
simshow('some_local_file.jpg')  # display from local file
simshow('http://mathandy.com/escher_sphere.png')  # display from url
</code></pre>
    </div>
    <div class="grid mb0 fw-wrap ai-start jc-end gs8 gsy">
        <time itemprop="dateCreated" datetime="2017-02-06T04:47:32"></time>
    <div class="grid--cell mr16" style="flex: 1 1 100px;">
<div class="post-menu"><a href="/a/42060466/11214460" title="short permalink to this answer" class="short-link" itemprop="url" id="link-post-42060466">share</a><span class="lsep">|</span><a href="/posts/42060466/edit" class="suggest-edit-post" title="revise and improve this post">edit</a></div>                    </div>
    <div class="post-signature grid--cell fl0">
<div class="user-info ">
    <div class="user-action-time">
        <a href="/posts/42060466/revisions" title="show all edits to this post">edited <span title="2017-03-24 04:13:09Z" class="relativetime">Mar 24 '17 at 4:13</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        
        <div class="-flair">
            
        </div>
    </div>
</div>    </div>
            


    <div class="post-signature grid--cell fl0">
<div class="user-info ">
    <div class="user-action-time">
        answered <span title="2017-02-06 04:47:32Z" class="relativetime">Feb 6 '17 at 4:47</span>
    </div>
    <div class="user-gravatar32">
        <a href="/users/1918127/andyp"><div class="gravatar-wrapper-32"><img src="https://i.stack.imgur.com/P0mp4.jpg?s=32&amp;g=1" alt="" width="32" height="32"></div></a>
    </div>
    <div class="user-details" itemprop="author" itemscope itemtype="http://schema.org/Person">
        <a href="/users/1918127/andyp">AndyP</a><span class="d-none" itemprop="name">AndyP</span>
        <div class="-flair">
            <span class="reputation-score" title="reputation score " dir="ltr">573</span><span title="4 silver badges"><span class="badge2"></span><span class="badgecount">4</span></span><span title="19 bronze badges"><span class="badge3"></span><span class="badgecount">19</span></span>
        </div>
    </div>
</div>

    </div>
    </div>
    
</div>

    
    <div class="post-layout--right">
	    <div id="comments-42060466" class="comments js-comments-container  dno" data-post-id="42060466">
            <ul class="comments-list js-comments-list"
                    data-remaining-comments-count="0"
                    data-canpost="false"
                    data-cansee="true"
                    data-comments-unavailable="false"
                    data-addlink-disabled="true">

            </ul>
	    </div>

        <div id="comments-link-42060466" data-rep=50 data-reg=true>

                <a class="js-add-link comments-link disabled-link "
                   title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”."
                   >add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span>
            <a class="js-show-link comments-link dno" title="expand to show all comments on this post" href=# onclick=""></a>
        </div>         
    </div>    </div>
</div>

  
<a name="47435806"></a>
<div id="answer-47435806" class="answer" data-answerid="47435806"  itemprop="suggestedAnswer" itemscope itemtype="http://schema.org/Answer">
    <div class="post-layout">
            <div class="votecell post-layout--left">
                

<div class="js-voting-container grid fd-column ai-stretch gs4 fc-black-200" data-post-id="47435806">
        <button class="js-vote-up-btn grid--cell s-btn s-btn__unset c-pointer" title="This answer is useful (click again to undo)" aria-pressed="false" aria-label="up vote" data-selected-classes="fc-theme-primary"><svg aria-hidden="true" class="svg-icon m0 iconArrowUpLg" width="36" height="36" viewBox="0 0 36 36"><path d="M2 26h32L18 10z"/></svg></button>
        <div class="js-vote-count grid--cell fc-black-500 fs-title grid fd-column ai-center" itemprop="upvoteCount" data-value="2">2</div>
        <button class="js-vote-down-btn grid--cell s-btn s-btn__unset c-pointer" title="This answer is not useful (click again to undo)" aria-pressed="false" aria-label="down vote" data-selected-classes="fc-theme-primary"><svg aria-hidden="true" class="svg-icon m0 iconArrowDownLg" width="36" height="36" viewBox="0 0 36 36"><path d="M2 10h32L18 26z"/></svg></button>


                <div class="js-accepted-answer-indicator grid--item fc-green-500 ta-center p4 d-none" title="loading when this answer was accepted..." tabindex="0" role="note" aria-label="accepted"><svg aria-hidden="true" class="svg-icon iconCheckmarkLg" width="36" height="36" viewBox="0 0 36 36"><path d="M6 14l8 8L30 6v8L14 30l-8-8z"/></svg></div>

</div>

            </div>
            

<div class="answercell post-layout--right">
    
    <div class="post-text" itemprop="text">
<p>If you would like to show it in a new window, you could use Tkinter + PIL library, like so:</p>

<pre><code>import tkinter as tk
from PIL import ImageTk, Image

def show_imge(path):
    image_window = tk.Tk()
    img = ImageTk.PhotoImage(Image.open(path))
    panel = tk.Label(image_window, image=img)
    panel.pack(side="bottom", fill="both", expand="yes")
    image_window.mainloop()
</code></pre>

<p>This is a modified example that can be found all over the web.</p>
    </div>
    <div class="grid mb0 fw-wrap ai-start jc-end gs8 gsy">
        <time itemprop="dateCreated" datetime="2017-11-22T13:21:21"></time>
    <div class="grid--cell mr16" style="flex: 1 1 100px;">
<div class="post-menu"><a href="/a/47435806/11214460" title="short permalink to this answer" class="short-link" itemprop="url" id="link-post-47435806">share</a><span class="lsep">|</span><a href="/posts/47435806/edit" class="suggest-edit-post" title="revise and improve this post">edit</a></div>                    </div>
    <div class="post-signature grid--cell fl0">
<div class="user-info user-hover">
    <div class="user-action-time">
        <a href="/posts/47435806/revisions" title="show all edits to this post">edited <span title="2018-12-06 06:39:16Z" class="relativetime">Dec 6 '18 at 6:39</span></a>
    </div>
    <div class="user-gravatar32">
        <a href="/users/1265/grey-panther"><div class="gravatar-wrapper-32"><img src="https://www.gravatar.com/avatar/1227b1bc14e774be69b4c4bdea24d3a9?s=32&amp;d=identicon&amp;r=PG" alt="" width="32" height="32"></div></a>
    </div>
    <div class="user-details">
        <a href="/users/1265/grey-panther">Grey Panther</a>
        <div class="-flair">
            <span class="reputation-score" title="reputation score 10,705" dir="ltr">10.7k</span><span title="6 gold badges"><span class="badge1"></span><span class="badgecount">6</span></span><span title="36 silver badges"><span class="badge2"></span><span class="badgecount">36</span></span><span title="60 bronze badges"><span class="badge3"></span><span class="badgecount">60</span></span>
        </div>
    </div>
</div>    </div>
            


    <div class="post-signature grid--cell fl0">
<div class="user-info ">
    <div class="user-action-time">
        answered <span title="2017-11-22 13:21:21Z" class="relativetime">Nov 22 '17 at 13:21</span>
    </div>
    <div class="user-gravatar32">
        <a href="/users/1692436/ivan-kvolik"><div class="gravatar-wrapper-32"><img src="https://www.gravatar.com/avatar/b8be4fbc82d81bad66d8a1a287b25326?s=32&amp;d=identicon&amp;r=PG" alt="" width="32" height="32"></div></a>
    </div>
    <div class="user-details" itemprop="author" itemscope itemtype="http://schema.org/Person">
        <a href="/users/1692436/ivan-kvolik">Ivan Kvolik</a><span class="d-none" itemprop="name">Ivan Kvolik</span>
        <div class="-flair">
            <span class="reputation-score" title="reputation score " dir="ltr">169</span><span title="2 silver badges"><span class="badge2"></span><span class="badgecount">2</span></span><span title="14 bronze badges"><span class="badge3"></span><span class="badgecount">14</span></span>
        </div>
    </div>
</div>

    </div>
    </div>
    
</div>

    
    <div class="post-layout--right">
	    <div id="comments-47435806" class="comments js-comments-container " data-post-id="47435806">
            <ul class="comments-list js-comments-list"
                    data-remaining-comments-count="0"
                    data-canpost="false"
                    data-cansee="true"
                    data-comments-unavailable="false"
                    data-addlink-disabled="true">


    <li id="comment-93184075" class="comment js-comment " data-comment-id="93184075">
        <div class="js-comment-actions comment-actions">
            <div class="comment-score js-comment-edit-hide">
            </div>
                    </div>
        <div class="comment-text js-comment-text-and-form">
            <div class="comment-body js-comment-edit-hide">
                
                <span class="comment-copy">Please show a picture of the output</span>
                
                    &ndash;&nbsp;<a href="/users/1147688/not2qubit"
                       title="4,647 reputation"
                       class="comment-user">not2qubit</a>
                <span class="comment-date" dir="ltr"><span title="2018-11-04 23:08:12Z" class="relativetime-clean">Nov 4 '18 at 23:08</span></span>
                                                            </div>
        </div>
    </li>
            </ul>
	    </div>

        <div id="comments-link-47435806" data-rep=50 data-reg=true>

                <a class="js-add-link comments-link disabled-link "
                   title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”."
                   >add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span>
            <a class="js-show-link comments-link dno" title="expand to show all comments on this post" href=# onclick=""></a>
        </div>         
    </div>    </div>
</div>

  
<a name="55853089"></a>
<div id="answer-55853089" class="answer" data-answerid="55853089"  itemprop="suggestedAnswer" itemscope itemtype="http://schema.org/Answer">
    <div class="post-layout">
            <div class="votecell post-layout--left">
                

<div class="js-voting-container grid fd-column ai-stretch gs4 fc-black-200" data-post-id="55853089">
        <button class="js-vote-up-btn grid--cell s-btn s-btn__unset c-pointer" title="This answer is useful (click again to undo)" aria-pressed="false" aria-label="up vote" data-selected-classes="fc-theme-primary"><svg aria-hidden="true" class="svg-icon m0 iconArrowUpLg" width="36" height="36" viewBox="0 0 36 36"><path d="M2 26h32L18 10z"/></svg></button>
        <div class="js-vote-count grid--cell fc-black-500 fs-title grid fd-column ai-center" itemprop="upvoteCount" data-value="0">0</div>
        <button class="js-vote-down-btn grid--cell s-btn s-btn__unset c-pointer" title="This answer is not useful (click again to undo)" aria-pressed="false" aria-label="down vote" data-selected-classes="fc-theme-primary"><svg aria-hidden="true" class="svg-icon m0 iconArrowDownLg" width="36" height="36" viewBox="0 0 36 36"><path d="M2 10h32L18 26z"/></svg></button>


                <div class="js-accepted-answer-indicator grid--item fc-green-500 ta-center p4 d-none" title="loading when this answer was accepted..." tabindex="0" role="note" aria-label="accepted"><svg aria-hidden="true" class="svg-icon iconCheckmarkLg" width="36" height="36" viewBox="0 0 36 36"><path d="M6 14l8 8L30 6v8L14 30l-8-8z"/></svg></div>

</div>

            </div>
            

<div class="answercell post-layout--right">
    
    <div class="post-text" itemprop="text">
<p>You can also using the Python module <code>Ipython</code>, which in addition to displaying an image in the Spyder console can embed images in Jupyter notebook. In Spyder, the image will be displayed in full size, not scaled to fit the console. </p>

<pre><code>from IPython.display import Image, display
display(Image(filename="mypic.png"))
</code></pre>
    </div>
    <div class="grid mb0 fw-wrap ai-start jc-end gs8 gsy">
        <time itemprop="dateCreated" datetime="2019-04-25T15:43:35"></time>
    <div class="grid--cell mr16" style="flex: 1 1 100px;">
<div class="post-menu"><a href="/a/55853089/11214460" title="short permalink to this answer" class="short-link" itemprop="url" id="link-post-55853089">share</a><span class="lsep">|</span><a href="/posts/55853089/edit" class="suggest-edit-post" title="revise and improve this post">edit</a></div>                    </div>
            


    <div class="post-signature grid--cell fl0">
<div class="user-info ">
    <div class="user-action-time">
        answered <span title="2019-04-25 15:43:35Z" class="relativetime">Apr 25 at 15:43</span>
    </div>
    <div class="user-gravatar32">
        <a href="/users/4714266/sarah-grogan"><div class="gravatar-wrapper-32"><img src="https://lh3.googleusercontent.com/-_oTB_h-liss/AAAAAAAAAAI/AAAAAAAAAyM/f41gKWqKW5U/photo.jpg?sz=32" alt="" width="32" height="32"></div></a>
    </div>
    <div class="user-details" itemprop="author" itemscope itemtype="http://schema.org/Person">
        <a href="/users/4714266/sarah-grogan">Sarah Grogan</a><span class="d-none" itemprop="name">Sarah Grogan</span>
        <div class="-flair">
            <span class="reputation-score" title="reputation score " dir="ltr">40</span><span title="6 bronze badges"><span class="badge3"></span><span class="badgecount">6</span></span>
        </div>
    </div>
</div>

    </div>
    </div>
    
</div>

    
    <div class="post-layout--right">
	    <div id="comments-55853089" class="comments js-comments-container  dno" data-post-id="55853089">
            <ul class="comments-list js-comments-list"
                    data-remaining-comments-count="0"
                    data-canpost="false"
                    data-cansee="true"
                    data-comments-unavailable="false"
                    data-addlink-disabled="true">

            </ul>
	    </div>

        <div id="comments-link-55853089" data-rep=50 data-reg=true>

                <a class="js-add-link comments-link disabled-link "
                   title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”."
                   >add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span>
            <a class="js-show-link comments-link dno" title="expand to show all comments on this post" href=# onclick=""></a>
        </div>         
    </div>    </div>
</div>
                                    <a name='new-answer'></a>
                        <form id="post-form" action="/questions/1413540/answer/submit" method="post"  class="post-form">
                            <input type="hidden" id="post-id" value="1413540" />
                            <input type="hidden" id="qualityBanWarningShown" name="qualityBanWarningShown" value="false" />
                            <input type="hidden" name="referrer" value="" />
                            <h2 class="space">
                                Your Answer
                            </h2>



            <script>
            StackExchange.ifUsing("editor", function () {
                StackExchange.using("externalEditor", function () {
                    StackExchange.using("snippets", function () {
                        StackExchange.snippets.init();
                    });
                });
            }, "code-snippets");
        </script>
    

<script>
    StackExchange.ready(function() {
        var channelOptions = {
            tags: "".split(" "),
            id: "1"
        };
        initTagRenderer("".split(" "), "".split(" "), channelOptions);
       
        StackExchange.using("externalEditor", function() {
                // Have to fire editor after snippets, if snippets enabled
                if (StackExchange.settings.snippets.snippetsEnabled) {
                    StackExchange.using("snippets", function() {
                        createEditor();
                    });
                }
                else {
                    createEditor();
                }
            });

            function createEditor() {
                StackExchange.prepareEditor({
                    heartbeatType: 'answer',
                    autoActivateHeartbeat: false,
                    convertImagesToLinks: true,
                noModals: true,
                showLowRepImageUploadWarning: true,
                reputationToPostImages: 10,
                bindNavPrevention: true,
                postfix: "",
                imageUploader: {
                    brandingHtml: "Powered by \u003ca class=\"icon-imgur-white\" href=\"https://imgur.com/\"\u003e\u003c/a\u003e",
                    contentPolicyHtml: "User contributions licensed under \u003ca href=\"https://creativecommons.org/licenses/by-sa/3.0/\"\u003ecc by-sa 3.0 with attribution required\u003c/a\u003e \u003ca href=\"https://stackoverflow.com/legal/content-policy\"\u003e(content policy)\u003c/a\u003e",
                    allowUrls: true
                },
                    onDemand: false,
                    discardSelector: ".discard-answer"
                    ,immediatelyShowMarkdownHelp:true,userId:11214460
                    });
                

        }
    });
</script>


<div id="post-editor" class="post-editor js-post-editor js-wz-element" data-wz-state = "8,16,32,64,128,256">

    <div class="ps-relative"> 
        <div class="wmd-container mb8">
            <div id="wmd-button-bar" class="wmd-button-bar btr-sm"></div>
                        <div class="js-stacks-validation">
                <div class="ps-relative">
                    <textarea id="wmd-input" class="wmd-input js-wz-element s-input bar0" name="post-text" cols="92" rows="15" tabindex="101" data-wz-state = "256" data-min-length=""></textarea>
                </div>
                <div class="s-input-message mt4 d-none js-stacks-validation-message"></div>
            </div>
        </div>
    </div>

    <aside class="grid ai-start jc-space-between js-answer-help s-notice s-notice__warning pb0 pr4 pt4 mb8 d-none" role="status" aria-hidden="true">
    <div class="grid--cell pt8">
        <p>Thanks for contributing an answer to Stack Overflow!</p><ul><li>Please be sure to <em>answer the question</em>. Provide details and share your research!</li></ul><p>But <em>avoid</em> …</p><ul><li>Asking for help, clarification, or responding to other answers.</li><li>Making statements based on opinion; back them up with references or personal experience.</li></ul><p>To learn more, see our <a href="/help/how-to-answer">tips on writing great answers</a>.</p>
    </div>
    <button class="grid--cell js-answer-help-close-btn s-btn s-btn__muted fc-dark">
        <svg aria-hidden="true" class="svg-icon iconClear" width="18" height="18" viewBox="0 0 18 18"><path d="M15 4.41L13.59 3 9 7.59 4.41 3 3 4.41 7.59 9 3 13.59 4.41 15 9 10.41 13.59 15 15 13.59 10.41 9z"/></svg>
    </button>
</aside>

<aside class="grid ai-start jc-space-between js-answer-ban s-notice s-notice__danger pb0 pr4 pt4 mb8 d-none" role="status" aria-hidden="true">
    <div class="grid--cell pt8">
        <p>Some of your past answers have not been well-received, and you're in danger of being <a href="/help/answer-bans">blocked from answering</a>.</p><p>Please pay close attention to the following guidance:</p><ul><li>Please be sure to <em>answer the question</em>. Provide details and share your research!</li></ul><p>But <em>avoid</em> …</p><ul><li>Asking for help, clarification, or responding to other answers.</li><li>Making statements based on opinion; back them up with references or personal experience.</li></ul><p>To learn more, see our <a href="/help/how-to-answer">tips on writing great answers</a>.</p>
    </div>
    <button class="grid--cell js-answer-ban-close-btn s-btn s-btn__muted fc-dark">
        <svg aria-hidden="true" class="svg-icon iconClear" width="18" height="18" viewBox="0 0 18 18"><path d="M15 4.41L13.59 3 9 7.59 4.41 3 3 4.41 7.59 9 3 13.59 4.41 15 9 10.41 13.59 15 15 13.59 10.41 9z"/></svg>
    </button>
</aside>

    <div id="draft-saved" class="draft-saved community-option fl" style="height:24px; display:none;">draft saved</div>
    <div id="draft-discarded" class="draft-discarded community-option fl" style="height:24px; display:none;">draft discarded</div>



    <div id="wmd-preview" class="wmd-preview"></div>
    <div></div>
    <div class="edit-block">
        <input id="fkey" name="fkey" type="hidden" value="30522f3ff56f6324c0c9ca4ba7899db6d7891cbe856249719fd4a350a57eea74">
        <input id="author" name="author" type="text">
    </div>



</div>

                            <div class="ps-relative">
                                
                                
                            </div>

                                                            <div class="form-submit cbt grid gsx gs4">
                                    <button id="submit-button" class="grid--cell s-btn s-btn__primary s-btn__icon" type="submit" tabindex="120" autocomplete="off">
Post Your Answer                                    </button>
                                    <button class="grid--cell s-btn s-btn__danger discard-answer dno">
                                        Discard
                                    </button>
                                </div>
                        </form>



                        <h2 class="bottom-notice" data-loc="1">
Not the answer you&#39;re looking for?                            Browse other questions tagged <a href="/questions/tagged/python" class="post-tag" title="show questions tagged &#39;python&#39;" rel="tag">python</a> <a href="/questions/tagged/image" class="post-tag" title="show questions tagged &#39;image&#39;" rel="tag">image</a>  or <a href="/questions/ask">ask your own question</a>.                        </h2>
            </div>
        </div>
                <div id="sidebar" class="show-votes" role="complementary" aria-label="sidebar">

<script>
    window.showNewUser = false;

</script>

<div class="module newuser newuser-greeting" id="newuser-box" style="display:none;">
    <h4>Hello World!</h4>
    <div>
        <p>This is a collaboratively edited question and answer site for <b>professional and enthusiast programmers</b>. It's 100% free.</p><p>Got a question about the site itself? <a href="https://meta.stackoverflow.com">meta</a> is the place to talk about things like what questions are appropriate, what tags we should use, etc.</p>
        <p class="ar">
                <a href="/tour?mnu=1">about &raquo;</a>&nbsp;&nbsp;&nbsp;
            <a href="/help?mnu=1">help &raquo;</a>
                &nbsp; <a href="https://meta.stackoverflow.com">meta &raquo;</a>
        </p>
    </div>
</div>
    <script>
    if (showNewUser) {
        document.getElementById('newuser-box').style.display = '';
    }
    </script>                            <div class="module question-stats">
                    <table id="qinfo">
                        <tr>
                            <td>
                                <p class="label-key">asked</p>
                            </td>
                            <td style="padding-left: 10px">
                                <p class="label-key" title="2009-09-11 22:22:50Z">
                                    <b>
                                        <time itemprop="dateCreated" datetime="2009-09-11T22:22:50">9 years, 7 months ago</time>
                                    </b>
                                </p>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <p class="label-key">viewed</p>
                            </td>

                            <td style="padding-left: 10px">
                                <p class="label-key">
                                    <b>111,363 times</b>
                                </p>
                            </td>
                        </tr>
                            <tr>
                                <td>
                                    <p class="label-key">active</p>
                                </td>
                                <td style="padding-left: 10px">
                                    <p class="label-key"><b><a href="?lastactivity" class="lastactivity-link" title="2019-04-25 15:43:35Z">3 days ago</a></b></p>
                                </td>
                            </tr>
                    </table>
                </div>
            <div class="s-sidebarwidget s-sidebarwidget__yellow s-anchors s-anchors__default mb16" data-tracker="cb=1">
            <div class="s-sidebarwidget--header s-sidebarwidget__small-bold-text">
                Featured on Meta
            </div>
        <ul class="s-sidebarwidget--content s-sidebarwidget__items pt0 pr16 pb0 pl16">
    <li class="s-sidebarwidget--item grid">
        <div class="grid--cell1 fl-shrink0">
                <a href="https://meta.stackexchange.com/questions/326560/unicorn-meta-zoo-1-why-another-podcast" data-ga="[&quot;community bulletin board&quot;,&quot;Featured on Meta&quot;,&quot;https://meta.stackexchange.com/questions/326560/unicorn-meta-zoo-1-why-another-podcast&quot;,null,null]">
<div class="favicon favicon-stackexchangemeta" title="Meta Stack Exchange"></div>                </a>
        </div>
        <div class="grid--cell">
            <a href="https://meta.stackexchange.com/questions/326560/unicorn-meta-zoo-1-why-another-podcast" data-ga="[&quot;community bulletin board&quot;,&quot;Featured on Meta&quot;,&quot;https://meta.stackexchange.com/questions/326560/unicorn-meta-zoo-1-why-another-podcast&quot;,null,null]">Unicorn Meta Zoo #1: Why another podcast?</a>
        </div>
    </li>
        </ul>
        <ul class="s-sidebarwidget--content s-sidebarwidget__items pt0 pr16 pb0 pl16">
    <li class="s-sidebarwidget--item grid">
        <div class="grid--cell1 fl-shrink0">
                <a href="https://meta.stackexchange.com/questions/326611/announcing-the-arrival-of-valued-associate-679-cesar-manara" data-ga="[&quot;community bulletin board&quot;,&quot;Featured on Meta&quot;,&quot;https://meta.stackexchange.com/questions/326611/announcing-the-arrival-of-valued-associate-679-cesar-manara&quot;,null,null]">
<div class="favicon favicon-stackexchangemeta" title="Meta Stack Exchange"></div>                </a>
        </div>
        <div class="grid--cell">
            <a href="https://meta.stackexchange.com/questions/326611/announcing-the-arrival-of-valued-associate-679-cesar-manara" data-ga="[&quot;community bulletin board&quot;,&quot;Featured on Meta&quot;,&quot;https://meta.stackexchange.com/questions/326611/announcing-the-arrival-of-valued-associate-679-cesar-manara&quot;,null,null]">Announcing the arrival of Valued Associate #679: Cesar Manara</a>
        </div>
    </li>
        </ul>
        <ul class="s-sidebarwidget--content s-sidebarwidget__items pt0 pr16 pb0 pl16">
    <li class="s-sidebarwidget--item grid">
        <div class="grid--cell1 fl-shrink0">
                <a href="https://meta.stackoverflow.com/questions/382721/data-science-time-april-2019-and-salary-with-experience" data-ga="[&quot;community bulletin board&quot;,&quot;Featured on Meta&quot;,&quot;https://meta.stackoverflow.com/questions/382721/data-science-time-april-2019-and-salary-with-experience&quot;,null,null]">
<div class="favicon favicon-stackoverflowmeta" title="Meta Stack Overflow"></div>                </a>
        </div>
        <div class="grid--cell">
            <a href="https://meta.stackoverflow.com/questions/382721/data-science-time-april-2019-and-salary-with-experience" data-ga="[&quot;community bulletin board&quot;,&quot;Featured on Meta&quot;,&quot;https://meta.stackoverflow.com/questions/382721/data-science-time-april-2019-and-salary-with-experience&quot;,null,null]">Data science time! April 2019 and salary with experience</a>
        </div>
    </li>
        </ul>
        <ul class="s-sidebarwidget--content s-sidebarwidget__items pt0 pr16 pb0 pl16">
    <li class="s-sidebarwidget--item grid">
        <div class="grid--cell1 fl-shrink0">
                <a href="https://meta.stackoverflow.com/questions/306314/should-we-burninate-the-code-smell-tag" data-ga="[&quot;community bulletin board&quot;,&quot;Featured on Meta&quot;,&quot;https://meta.stackoverflow.com/questions/306314/should-we-burninate-the-code-smell-tag&quot;,null,null]">
<div class="favicon favicon-stackoverflowmeta" title="Meta Stack Overflow"></div>                </a>
        </div>
        <div class="grid--cell">
            <a href="https://meta.stackoverflow.com/questions/306314/should-we-burninate-the-code-smell-tag" data-ga="[&quot;community bulletin board&quot;,&quot;Featured on Meta&quot;,&quot;https://meta.stackoverflow.com/questions/306314/should-we-burninate-the-code-smell-tag&quot;,null,null]">Should we burninate the [code-smell] tag?</a>
        </div>
    </li>
        </ul>
            <div class="s-sidebarwidget--header s-sidebarwidget__small-bold-text">
                Hot Meta Posts
            </div>
        <ul class="s-sidebarwidget--content s-sidebarwidget__items pt0 pr16 pb0 pl16">
    <li class="s-sidebarwidget--item grid">
        <div class="grid--cell1 fl-shrink0">
                <span class="fc-black-500" title="Vote score (upvotes - downvotes)">9</span>
        </div>
        <div class="grid--cell">
            <a href="https://meta.stackoverflow.com/questions/384348/is-there-a-unified-login" data-ga="[&quot;community bulletin board&quot;,&quot;Hot Meta Posts&quot;,&quot;https://meta.stackoverflow.com/questions/384348/is-there-a-unified-login&quot;,null,null]">Is there a unified login?</a>
        </div>
    </li>
        </ul>
        <ul class="s-sidebarwidget--content s-sidebarwidget__items pt0 pr16 pb0 pl16">
    <li class="s-sidebarwidget--item grid">
        <div class="grid--cell1 fl-shrink0">
                <span class="fc-black-500" title="Vote score (upvotes - downvotes)">15</span>
        </div>
        <div class="grid--cell">
            <a href="https://meta.stackoverflow.com/questions/384358/can-the-edited-information-always-be-kept-to-the-left-of-the-post-owners-info" title="Can the &quot;edited&quot; information always be kept to the left of the post owner&#39;s information?" data-ga="[&quot;community bulletin board&quot;,&quot;Hot Meta Posts&quot;,&quot;https://meta.stackoverflow.com/questions/384358/can-the-edited-information-always-be-kept-to-the-left-of-the-post-owners-info&quot;,null,null]">Can the &ldquo;edited&rdquo; information always be kept to the left of the post owner&#39;s&hellip;</a>
        </div>
    </li>
        </ul>
</div>
<div id="dfp-tsb" class="everyonelovesstackoverflow everyoneloves__top-sidebar"></div>
            <div id="hireme"></div>
<script>;try{(function(a){function b(a){return'string'==typeof a?document.getElementById(a):a}function c(a){return a=b(a),!!a&&'none'===getComputedStyle(a).display}function d(a){return!c(a)}function e(a){return!!a}function f(a){return /^\s*$/.test(b(a).innerHTML)}function g(a){var b=a.style;b.height=b.maxHeight=b.minHeight='auto',b.display='none',[].forEach.call(a.children,g)}function h(a,b){var c;return function(){return a&&(c=a.call(b||this,arguments),a=null),c}}function i(a){var b=document.createElement('script');b.src=a,document.body.appendChild(b)}function j(a){return k([],a)}function k(a,b){return a.push=function(a){return b(),delete this.push,this.push(a)},a}function l(){try{return!new Function('return async()=>{};')}catch(a){return!0}}function m(){return'undefined'!=typeof googletag&&!!googletag.apiReady}function n(){m()||(googletag={cmd:j(A)})}function o(){var a=document.createElement('div');a.className='adsbox',a.id='clc-abd',a.style.position='absolute',a.style.pointerEvents='none',a.innerHTML='&nbsp;',document.body.appendChild(a)}function p(a){var b=a.serviceName,c=a.slot,d=a.lineItemId;try{var e=c.getSlotElementId(),f=[];e||f.push('id=0');var h=document.getElementById(e);if(!e||h?h.hasAttribute('data-clc-stalled')&&f.push('st=1'):f.push('el=0'),0!==f.length)return void B(f.join('&'));-1===x.dh.indexOf(d)?h.setAttribute('data-clc-prefilled','true'):g(h),h.setAttribute('data-clc-ready','true')}catch(a){var i=document.querySelector('#dfp-tsb, #dfp-isb, #clc-tsb');i&&i.setAttribute('data-clc-ready','true'),B('e=1')}}function q(){return Object.keys(F.ids)}function r(a){var b=F.ids[a],c=F.slots[b];'function'==typeof c&&(c=c(a));return{path:'/'+C+'/'+E+'/'+b+'/'+D,sizes:c,zone:b}}function s(a){return!(clc.collapse&&void 0!==clc.collapse[a])||!!clc.collapse[a]}function t(a,b){'dfp-isb'===a&&b.setTargeting('Sidebar',['Inline']),'dfp-tsb'===a&&b.setTargeting('Sidebar',['Right']);var c=r(a),d=c.path,e=c.sizes,f=c.zone,g=googletag.defineSlot(d,e,a);s(f)&&g.setCollapseEmptyDiv(!0,!0),g.addService(b),!1}function u(b){var c=a.dfp&&a.dfp.targeting||{};Object.keys(c).forEach(function(a){b.setTargeting(a,c[a])})}function v(a){var g=a.map(b).filter(e);return{eligible:g.filter(f).filter(d).map(function(a){return a.id}),ineligible:g.filter(c)}}function w(b){if(void 0===b&&(b=q()),!m())return n(),void googletag.cmd.push(function(){return w(b)});var c=v(b),d=c.eligible,e=c.ineligible;if(e.forEach(g),0!==d.length){o(),googletag.destroySlots();var f=googletag.pubads();f.enableSingleRequest(),a.sreEvent||(f.addEventListener('slotRenderEnded',p),a.sreEvent=!0),u(f),d.forEach(function(a){return t(a,f)}),googletag.enableServices(),d.forEach(function(a){googletag.display(a)})}}var x=function(a){for(var b=[],c=1;c<arguments.length;c++)b[c-1]=arguments[c];for(var d,e=0,f=b;e<f.length;e++)for(var g in d=f[e],d)a[g]=d[g];return a}({"lib":"https://cdn.sstatic.net/clc/clc.min.js?v=04d772c81312","style":"https://cdn.sstatic.net/clc/styles/clc.min.css?v=768595a6d237","u":"https://clc.stackoverflow.com/markup.js","wa":true,"kt":2000,"tto":true,"h":"clc.stackoverflow.com","allowed":"^(((talent\\.)?stackoverflow)|(blog\\.codinghorror)|(serverfault|askubuntu)|([^\\.]+\\.stackexchange))\\.com$","wv":true,"al":false,"dh":[4385506061,4386578282,4386579572]},a.options||{}),y=h(function(){var a=x.lib;l()&&(a=a.replace(/(\.min)?\.js(\?v=[0-9a-fA-F]+)?$/,'.ie$1.js$2')),i(a)}),z=a.cmd||[];Array.isArray(z)&&(0<z.length?y():k(z,y));var A=h(function(){i('https://www.googletagservices.com/tag/js/gpt.js')}),B=function(a){new Image().src='https://'+x.h+'/stalled.gif?'+a},C='248424177',D=/^\/tags\//.test(location.pathname)||/^\/questions\/tagged\//.test(location.pathname)?'tag-pages':/^\/$/.test(location.pathname)||/^\/home/.test(location.pathname)?'home-page':'question-pages',E=location.hostname;var F={slots:{lb:[[728,90]],mlb:[[728,90]],smlb:[[728,90]],bmlb:[[728,90]],sb:function(a){return'dfp-tsb'===a?[[300,250],[300,600]]:[[300,250]]},"tag-sponsorship":[[730,135]],"mobile-below-question":[[320,50],[300,250]]},ids:{"dfp-tlb":'lb',"dfp-mlb":'mlb',"dfp-smlb":'smlb',"dfp-bmlb":'bmlb',"dfp-tsb":'sb',"dfp-isb":'sb',"dfp-tag":'tag-sponsorship',"dfp-m-aq":'mobile-below-question',"clc-tlb":'lb',"clc-mlb":'mlb',"clc-tsb":'sb'}};(function(){var b=x.al;b&&z.push(function(){return a.load()})})(),n(),a.dfp={load:w},a.options=x,a.cmd=z})(this.clc=this.clc||{})}catch(a){window.console.error(a)}</script>            <script>
                var clc = clc || {};
                clc.collapse = { sb: !0,'tag-sponsorship':!0,lb:!1,mlb:!1,smlb:!1,bmlb:!1,'mobile-below-question':!0};
                clc.cmd = clc.cmd || [];
                clc.cmd.push(function () { window.clc_request='Ak_Aw_edzNYIQzLtAKSRFQACAAAAAgAAAAMOAAAAfHB5dGhvbnxpbWFnZXwAK2_-NQqXz4HFXg'; clc.load(); });
                                clc.dfp = clc.dfp || {};
                clc.dfp.targeting = {Registered:['true'],'so-tag':['python','image']};
                
                var googletag = googletag || {};
                googletag.cmd = googletag.cmd || [];
                googletag.cmd.push(function () { clc.dfp.load(); });
            </script>
            <div class="module sidebar-linked">
	<h4 id="h-linked">Linked</h4>
	<div class="linked" data-tracker="lq=1">

<div class="spacer">
	<a href="/q/5333244" title="Vote score (upvotes - downvotes)">
		<div class="answer-votes answered-accepted default">19</div>
	</a>
	<a href="/questions/5333244/how-to-display-a-jpg-file-in-python?noredirect=1" class="question-hyperlink">How to display a jpg file in Python?</a>
</div>
<div class="spacer">
	<a href="/q/40710106" title="Vote score (upvotes - downvotes)">
		<div class="answer-votes  default">-1</div>
	</a>
	<a href="/questions/40710106/python-displaying-image?noredirect=1" class="question-hyperlink">Python displaying image</a>
</div>
<div class="spacer">
	<a href="/q/44615272" title="Vote score (upvotes - downvotes)">
		<div class="answer-votes  default">0</div>
	</a>
	<a href="/questions/44615272/how-to-show-jpg-in-python-code?noredirect=1" class="question-hyperlink">How to Show Jpg in python code</a>
</div>
<div class="spacer">
	<a href="/q/51600354" title="Vote score (upvotes - downvotes)">
		<div class="answer-votes  default">0</div>
	</a>
	<a href="/questions/51600354/how-do-you-display-a-jpg-image-using-python-also-where-would-i-need-to-have-t?noredirect=1" class="question-hyperlink">How do you display a .jpg image using python? Also, where would I need to have the file to access it?</a>
</div>
<div class="spacer">
	<a href="/q/7382455" title="Vote score (upvotes - downvotes)">
		<div class="answer-votes  default">8</div>
	</a>
	<a href="/questions/7382455/ppm-image-to-ascii-art-in-python?noredirect=1" class="question-hyperlink">PPM image to ASCII art in Python</a>
</div>			</div>
</div>

                <div class="module sidebar-related">
                    <h4 id="h-related">Related</h4>
                    <div class="related js-gps-related-questions" data-tracker="rq=1">
                        <div class="spacer"><a href="/q/89228" title="Vote score (upvotes - downvotes)"><div class="answer-votes answered-accepted extra-large">4192</div></a><a href="/questions/89228/calling-an-external-command-in-python" class="question-hyperlink">Calling an external command in Python</a></div><div class="spacer"><a href="/q/100003" title="Vote score (upvotes - downvotes)"><div class="answer-votes answered-accepted extra-large">5094</div></a><a href="/questions/100003/what-are-metaclasses-in-python" class="question-hyperlink">What are metaclasses in Python?</a></div><div class="spacer"><a href="/q/176918" title="Vote score (upvotes - downvotes)"><div class="answer-votes answered-accepted extra-large">2646</div></a><a href="/questions/176918/finding-the-index-of-an-item-given-a-list-containing-it-in-python" class="question-hyperlink">Finding the index of an item given a list containing it in Python</a></div><div class="spacer"><a href="/q/252703" title="Vote score (upvotes - downvotes)"><div class="answer-votes answered-accepted extra-large">3084</div></a><a href="/questions/252703/what-is-the-difference-between-pythons-list-methods-append-and-extend" class="question-hyperlink">What is the difference between Python&#39;s list methods append and extend?</a></div><div class="spacer"><a href="/q/273192" title="Vote score (upvotes - downvotes)"><div class="answer-votes answered-accepted extra-large">3521</div></a><a href="/questions/273192/how-can-i-safely-create-a-nested-directory-in-python" class="question-hyperlink">How can I safely create a nested directory in Python?</a></div><div class="spacer"><a href="/q/394809" title="Vote score (upvotes - downvotes)"><div class="answer-votes answered-accepted extra-large">5135</div></a><a href="/questions/394809/does-python-have-a-ternary-conditional-operator" class="question-hyperlink">Does Python have a ternary conditional operator?</a></div><div class="spacer"><a href="/q/415511" title="Vote score (upvotes - downvotes)"><div class="answer-votes answered-accepted extra-large">2325</div></a><a href="/questions/415511/how-to-get-the-current-time-in-python" class="question-hyperlink">How to get the current time in Python</a></div><div class="spacer"><a href="/q/510348" title="Vote score (upvotes - downvotes)"><div class="answer-votes extra-large">2421</div></a><a href="/questions/510348/how-can-i-make-a-time-delay-in-python" class="question-hyperlink">How can I make a time delay in Python?</a></div><div class="spacer"><a href="/q/541966" title="Vote score (upvotes - downvotes)"><div class="answer-votes answered-accepted extra-large">1831</div></a><a href="/questions/541966/lazy-load-of-images-in-listview" class="question-hyperlink">Lazy load of images in ListView</a></div><div class="spacer"><a href="/q/3437059" title="Vote score (upvotes - downvotes)"><div class="answer-votes answered-accepted extra-large">3569</div></a><a href="/questions/3437059/does-python-have-a-string-contains-substring-method" class="question-hyperlink">Does Python have a string &#39;contains&#39; substring method?</a></div>
                    </div>
                </div>

<div id="hot-network-questions" class="module tex2jax_ignore">
    <h4>
        <a href="https://stackexchange.com/questions?tab=hot"
           class="js-gps-track s-link s-link__inherit" 
           data-gps-track="posts_hot_network.click({ item_type:1, location:11 })">
            Hot Network Questions
        </a>
    </h4>
    <ul>
            <li >
                <div class="favicon favicon-stackoverflow" title="Stack Overflow"></div><a href="https://stackoverflow.com/questions/55898670/why-do-i-get-a-bootstrapmethoderror-when-trying-to-call-a-super-classs-protecte" class="js-gps-track question-hyperlink mb0" data-gps-track="site.switch({ item_type:11, target_site:1 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Why do I get a BootstrapMethodError when trying to call a super class&#39;s protected method using method reference from an inner class?
                </a>

            </li>
            <li >
                <div class="favicon favicon-rpg" title="Role-playing Games Stack Exchange"></div><a href="https://rpg.stackexchange.com/questions/147079/is-it-possible-to-ready-a-spell-to-be-cast-just-before-the-start-of-your-next-tu" class="js-gps-track question-hyperlink mb0" data-gps-track="site.switch({ item_type:11, target_site:122 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Is it possible to Ready a spell to be cast just before the start of your next turn by having the trigger be an ally&#39;s attack?
                </a>

            </li>
            <li >
                <div class="favicon favicon-movies" title="Movies &amp; TV Stack Exchange"></div><a href="https://movies.stackexchange.com/questions/99855/how-did-arya-manage-the-sneak-attack" class="js-gps-track question-hyperlink mb0" data-gps-track="site.switch({ item_type:11, target_site:367 }); posts_hot_network.click({ item_type:2, location:11 })">
                    How did Arya manage the sneak attack?
                </a>

            </li>
            <li >
                <div class="favicon favicon-worldbuilding" title="Worldbuilding Stack Exchange"></div><a href="https://worldbuilding.stackexchange.com/questions/145912/a-non-technological-repeating-visible-object-in-the-sky-holding-its-position" class="js-gps-track question-hyperlink mb0" data-gps-track="site.switch({ item_type:11, target_site:579 }); posts_hot_network.click({ item_type:2, location:11 })">
                    A non-technological, repeating, visible object in the sky, holding its position in the sky for hours
                </a>

            </li>
            <li >
                <div class="favicon favicon-puzzling" title="Puzzling Stack Exchange"></div><a href="https://puzzling.stackexchange.com/questions/83303/single-colour-mastermind-problem" class="js-gps-track question-hyperlink mb0" data-gps-track="site.switch({ item_type:11, target_site:559 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Single Colour Mastermind Problem
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-movies" title="Movies &amp; TV Stack Exchange"></div><a href="https://movies.stackexchange.com/questions/99874/what-happened-to-the-dragon-jon-snow-rode" class="js-gps-track question-hyperlink mb0" data-gps-track="site.switch({ item_type:11, target_site:367 }); posts_hot_network.click({ item_type:2, location:11 })">
                    What happened to the Dragon Jon Snow rode?
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-writing" title="Writing Stack Exchange"></div><a href="https://writing.stackexchange.com/questions/44801/how-to-creep-the-reader-out-with-what-seems-like-a-normal-person" class="js-gps-track question-hyperlink mb0" data-gps-track="site.switch({ item_type:11, target_site:166 }); posts_hot_network.click({ item_type:2, location:11 })">
                    How to creep the reader out with what seems like a normal person?
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-electronics" title="Electrical Engineering Stack Exchange"></div><a href="https://electronics.stackexchange.com/questions/435875/confusion-about-capacitors" class="js-gps-track question-hyperlink mb0" data-gps-track="site.switch({ item_type:11, target_site:135 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Confusion about capacitors
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-chess" title="Chess Stack Exchange"></div><a href="https://chess.stackexchange.com/questions/24338/how-does-engine-strength-scale-with-hardware" class="js-gps-track question-hyperlink mb0" data-gps-track="site.switch({ item_type:11, target_site:435 }); posts_hot_network.click({ item_type:2, location:11 })">
                    How does engine strength scale with hardware?
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-electronics" title="Electrical Engineering Stack Exchange"></div><a href="https://electronics.stackexchange.com/questions/435989/power-factor-and-cos-%cf%86" class="js-gps-track question-hyperlink mb0" data-gps-track="site.switch({ item_type:11, target_site:135 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Power factor and cos φ
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-english" title="English Language &amp; Usage Stack Exchange"></div><a href="https://english.stackexchange.com/questions/496504/what-are-the-spoon-bit-of-a-spoon-and-fork-bit-of-a-fork-called" class="js-gps-track question-hyperlink mb0" data-gps-track="site.switch({ item_type:11, target_site:97 }); posts_hot_network.click({ item_type:2, location:11 })">
                    What are the spoon bit of a spoon and fork bit of a fork called?
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-travel" title="Travel Stack Exchange"></div><a href="https://travel.stackexchange.com/questions/137510/volunteering-in-england" class="js-gps-track question-hyperlink mb0" data-gps-track="site.switch({ item_type:11, target_site:273 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Volunteering in England
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-opensource" title="Open Source Stack Exchange"></div><a href="https://opensource.stackexchange.com/questions/8242/authors-and-contributors-of-forked-project" class="js-gps-track question-hyperlink mb0" data-gps-track="site.switch({ item_type:11, target_site:619 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Authors and contributors of forked project
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-ell" title="English Language Learners Stack Exchange"></div><a href="https://ell.stackexchange.com/questions/208581/it-is-threads-versus-they-are-threads" class="js-gps-track question-hyperlink mb0" data-gps-track="site.switch({ item_type:11, target_site:481 }); posts_hot_network.click({ item_type:2, location:11 })">
                    It is threads versus they are threads
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-aviation" title="Aviation Stack Exchange"></div><a href="https://aviation.stackexchange.com/questions/63745/are-boeing-737-800-s-grounded" class="js-gps-track question-hyperlink mb0" data-gps-track="site.switch({ item_type:11, target_site:528 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Are Boeing 737-800’s grounded?
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-chemistry" title="Chemistry Stack Exchange"></div><a href="https://chemistry.stackexchange.com/questions/114517/when-to-use-1-ka-vs-kb" class="js-gps-track question-hyperlink mb0" data-gps-track="site.switch({ item_type:11, target_site:431 }); posts_hot_network.click({ item_type:2, location:11 })">
                    When to use 1/Ka vs Kb
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-physics" title="Physics Stack Exchange"></div><a href="https://physics.stackexchange.com/questions/476554/is-thermodynamics-only-applicable-to-systems-in-equilibrium" class="js-gps-track question-hyperlink mb0" data-gps-track="site.switch({ item_type:11, target_site:151 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Is thermodynamics only applicable to systems in equilibrium?
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-security" title="Information Security Stack Exchange"></div><a href="https://security.stackexchange.com/questions/209195/password-expiration-with-password-manager" class="js-gps-track question-hyperlink mb0" data-gps-track="site.switch({ item_type:11, target_site:162 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Password expiration with Password manager
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-christianity" title="Christianity Stack Exchange"></div><a href="https://christianity.stackexchange.com/questions/70766/is-it-appropriate-to-refer-to-god-as-it" class="js-gps-track question-hyperlink mb0" data-gps-track="site.switch({ item_type:11, target_site:304 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Is it appropriate to refer to God as &quot;It&quot;?
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-chemistry" title="Chemistry Stack Exchange"></div><a href="https://chemistry.stackexchange.com/questions/114478/confused-by-notation-of-atomic-number-z-and-mass-number-a-on-periodic-table-of-e" class="js-gps-track question-hyperlink mb0" data-gps-track="site.switch({ item_type:11, target_site:431 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Confused by notation of atomic number Z and mass number A on periodic table of elements
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-judaism" title="Mi Yodeya"></div><a href="https://judaism.stackexchange.com/questions/103274/in-the-time-of-the-mishna-were-there-jewish-cities-without-courts" class="js-gps-track question-hyperlink mb0" data-gps-track="site.switch({ item_type:11, target_site:248 }); posts_hot_network.click({ item_type:2, location:11 })">
                    In the time of the mishna, were there Jewish cities without courts?
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-math" title="Mathematics Stack Exchange"></div><a href="https://math.stackexchange.com/questions/3206136/find-the-coordinate-of-two-line-segments-that-are-perpendicular" class="js-gps-track question-hyperlink mb0" data-gps-track="site.switch({ item_type:11, target_site:69 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Find the coordinate of two line segments that are perpendicular
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-math" title="Mathematics Stack Exchange"></div><a href="https://math.stackexchange.com/questions/3206088/how-can-i-get-precisely-a-certain-cubic-cm-by-changing-the-following-factors" class="js-gps-track question-hyperlink mb0" data-gps-track="site.switch({ item_type:11, target_site:69 }); posts_hot_network.click({ item_type:2, location:11 })">
                    How can I get precisely a certain cubic cm by changing the following factors?
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-stackoverflow" title="Stack Overflow"></div><a href="https://stackoverflow.com/questions/55898506/list-or-dictionary-of-objects-inside-class" class="js-gps-track question-hyperlink mb0" data-gps-track="site.switch({ item_type:11, target_site:1 }); posts_hot_network.click({ item_type:2, location:11 })">
                    List or Dictionary of Objects inside Class
                </a>

            </li>
    </ul>

        <a href="#" 
           class="show-more js-show-more js-gps-track" 
           data-gps-track="posts_hot_network.click({ item_type:3, location:11 })">
            more hot questions
        </a>
</div>

<div id="feed-link">
    <a href="/feeds/question/1413540" title="feed of this question and its answers">
        <svg aria-hidden="true" class="svg-icon fc-orange-400 iconRss" width="18" height="18" viewBox="0 0 18 18"><path d="M1 3c0-1.1.9-2 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V3zm14.5 12C15.5 8.1 9.9 2.5 3 2.5V5a10 10 0 0 1 10 10h2.5zm-5 0A7.5 7.5 0 0 0 3 7.5V10a5 5 0 0 1 5 5h2.5zm-5 0A2.5 2.5 0 0 0 3 12.5V15h2.5z"/></svg>
        question feed
    </a>
</div>
        </div>
    </div>
<script>StackExchange.ready(function(){$.get('/posts/1413540/ivc/f65a');});</script>
<noscript><div><img src="/posts/1413540/ivc/f65a" class="dno" alt="" width="0" height="0"></div></noscript><div style="display:none" id="prettify-lang">lang-py</div></div>

    <script>
        $('#wmd-input').one("keypress", function() {
            $.ajax({
                url: '/accounts/email-settings-form',
                cache: false,
                success: function(data) {
                    $('#submit-button').parent().prepend(data);
                }
            });
        });

    </script>

        </div>
    </div>

    <footer id="footer" class="site-footer js-footer" role="contentinfo">
        <div class="site-footer--container">
                <div class="site-footer--logo">

                    
                    <a href="https://stackoverflow.com"><svg aria-hidden="true" class="svg-icon native iconLogoGlyphMd" width="32" height="37" viewBox="0 0 32 37"><g><path fill="#BCBBBB" d="M26 33v-9h4v13H0V24h4v9z"/><path d="M23.1 25.99l.68-2.95-16.1-3.35L7 23l16.1 2.99zM9.1 15.2l15 7 1.4-3-15-7-1.4 3zm4.2-7.4L26 18.4l2.1-2.5L15.4 5.3l-2.1 2.5zM21.5 0l-2.7 2 9.9 13.3 2.7-2L21.5 0zM7 30h16v-3H7v3z" fill="#F48024"/></g></svg></a>
                </div>
            
            <nav class="site-footer--nav">
                    <div class="site-footer--col site-footer--col__visible js-footer-col" data-name="default">
                        <h5 class="-title"><a href="https://stackoverflow.com" class="js-gps-track" data-gps-track="footer.click({ location: 2, link: 15})">Stack Overflow</a></h5>
                        <ul class="-list js-primary-footer-links">
                            <li class="-item"><a href="/questions" class="js-gps-track -link" data-gps-track="footer.click({ location: 2, link: 16})">Questions</a></li>
                                <li class="-item"><a href="https://stackoverflow.com/jobs" class="js-gps-track -link" data-gps-track="footer.click({ location: 2, link: 17})">Jobs</a></li>
                                <li class="-item"><a href="https://stackoverflow.com/jobs/directory/developer-jobs" class="js-gps-track -link" data-gps-track="footer.click({ location: 2, link: 11})">Developer Jobs Directory</a></li>
                                     <li class="-item"><a href="https://stackoverflow.com/jobs/salary" class="js-gps-track -link" data-gps-track="footer.click({ location: 2, link: 28})">Salary Calculator</a></li>
                                                            <li class="-item"><a href="/help" class="js-gps-track -link" data-gps-track="footer.click({ location: 2, link: 3 })">Help</a></li>
                                <li class="-item"><a onclick='StackExchange.switchMobile("on")' class="js-gps-track -link" data-gps-track="footer.click({ location: 2, link: 12 })">Mobile</a></li>
                        </ul>
                    </div>
                    <div class="site-footer--col site-footer--col__visible js-footer-col" data-name="default">
                        <h5 class="-title"><a href="https://www.stackoverflowbusiness.com" class="js-gps-track" data-gps-track="footer.click({ location: 2, link: 19 })">Products</a></h5>
                        <ul class="-list">
                            <li class="-item"><a href="https://stackoverflow.com/teams" class="js-gps-track -link" 
                                                 data-ga="[&quot;teams traffic&quot;,&quot;footer - site nav&quot;,&quot;stackoverflow.com/teams&quot;,null,{&quot;dimension4&quot;:&quot;teams&quot;}]"
                                                 data-gps-track="footer.click({ location: 2, link: 29 })">Teams</a></li>
                            <li class="-item"><a href="https://www.stackoverflowbusiness.com/talent" class="js-gps-track -link" data-gps-track="footer.click({ location: 2, link: 20 })">Talent</a></li>
                            <li class="-item"><a href="https://www.stackoverflowbusiness.com/advertising" class="js-gps-track -link" data-gps-track="footer.click({ location: 2, link: 21 })">Advertising</a></li>
                            <li class="-item"><a href="https://stackoverflow.com/enterprise" class="js-gps-track -link" data-gps-track="footer.click({ location: 2, link: 22 })">Enterprise</a></li>
                        </ul>
                    </div>
                <div class="site-footer--col site-footer--col__visible js-footer-col" data-name="default">
                    <h5 class="-title"><a class="js-gps-track" data-gps-track="footer.click({ location: 2, link: 1 })" href="https://stackoverflow.com/company/about">Company</a></h5>
                    <ul class="-list">
                            <li class="-item"><a class="js-gps-track -link" data-gps-track="footer.click({ location: 2, link: 1 })" href="https://stackoverflow.com/company/about">About</a></li>
                                                <li class="-item"><a class="js-gps-track -link" data-gps-track="footer.click({ location: 2, link: 27 })" href="https://stackoverflow.com/company/press">Press</a></li>
                            <li class="-item"><a class="js-gps-track -link" data-gps-track="footer.click({ location: 2, link: 9 })" href="https://stackoverflow.com/company/work-here">Work Here</a></li>
                        <li class="-item"><a class="js-gps-track -link" data-gps-track="footer.click({ location: 2, link: 7 })" href="https://stackoverflow.com/legal">Legal</a></li>
                        <li class="-item"><a class="js-gps-track -link" data-gps-track="footer.click({ location: 2, link: 8 })" href="https://stackoverflow.com/legal/privacy-policy">Privacy Policy</a></li>
                            <li class="-item"><a class="js-gps-track -link" data-gps-track="footer.click({ location: 2, link: 13 })" href="https://stackoverflow.com/company/contact">Contact Us</a></li>
                    </ul>
                </div>
                <div class="site-footer--col site-footer--categories-nav site-footer--col__visible">
                    <a href="#" class="site-footer--back js-footer-back"><svg aria-hidden="true" class="svg-icon iconArrowLeftAlt" width="18" height="18" viewBox="0 0 18 18"><path d="M10.58 16L12 14.59 6.4 9 12 3.41 10.57 2l-7 7z"/></svg></a>
                    <div>
                        <h5 class="-title"><a href="https://stackexchange.com">Stack Exchange<br> Network</a></h5>
                        <ul class="-list">
                            <li class="-item"><a href="#" class="-link _expandable js-footer-category-trigger js-gps-track" data-gps-track="footer.click({ location: 2, link: 24 })" data-target="Technology">Technology</a></li>
                            <li class="-item"><a href="#" class="-link _expandable js-footer-category-trigger js-gps-track" data-gps-track="footer.click({ location: 2, link: 24 })" data-target="Life / Arts">Life / Arts</a></li>
                            <li class="-item"><a href="#" class="-link _expandable js-footer-category-trigger js-gps-track" data-gps-track="footer.click({ location: 2, link: 24 })" data-target="Culture / Recreation">Culture / Recreation</a></li>
                            <li class="-item"><a href="#" class="-link _expandable js-footer-category-trigger js-gps-track" data-gps-track="footer.click({ location: 2, link: 24 })" data-target="Science">Science</a></li>
                            <li class="-item"><a href="#" class="-link _expandable js-footer-category-trigger js-gps-track" data-gps-track="footer.click({ location: 2, link: 24 })" data-target="Other">Other</a></li>

                        </ul>
                    </div>
                </div>
                <div class="site-footer--categories">
                    <div class="site-footer--col site-footer--category js-footer-col" data-name="Technology">
        <ul class="-list">
                <li class="-item"><a href="https://stackoverflow.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="professional and enthusiast programmers">Stack Overflow</a></li>
                <li class="-item"><a href="https://serverfault.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="system and network administrators">Server Fault</a></li>
                <li class="-item"><a href="https://superuser.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="computer enthusiasts and power users">Super User</a></li>
                <li class="-item"><a href="https://webapps.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="power users of web applications">Web Applications</a></li>
                <li class="-item"><a href="https://askubuntu.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="Ubuntu users and developers">Ask Ubuntu</a></li>
                <li class="-item"><a href="https://webmasters.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="pro webmasters">Webmasters</a></li>
                <li class="-item"><a href="https://gamedev.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="professional and independent game developers">Game Development</a></li>
                    </ul></div><div class="site-footer--col site-footer--category js-footer-col" data-name="Technology"><ul class="-list">
                <li class="-item"><a href="https://tex.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="users of TeX, LaTeX, ConTeXt, and related typesetting systems">TeX - LaTeX</a></li>
                <li class="-item"><a href="https://softwareengineering.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="professionals, academics, and students working within the systems development life cycle">Software Engineering</a></li>
                <li class="-item"><a href="https://unix.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="users of Linux, FreeBSD and other Un*x-like operating systems">Unix &amp; Linux</a></li>
                <li class="-item"><a href="https://apple.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="power users of Apple hardware and software">Ask Different (Apple)</a></li>
                <li class="-item"><a href="https://wordpress.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="WordPress developers and administrators">WordPress Development</a></li>
                <li class="-item"><a href="https://gis.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="cartographers, geographers and GIS professionals">Geographic Information Systems</a></li>
                <li class="-item"><a href="https://electronics.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="electronics and electrical engineering professionals, students, and enthusiasts">Electrical Engineering</a></li>
                    </ul></div><div class="site-footer--col site-footer--category js-footer-col" data-name="Technology"><ul class="-list">
                <li class="-item"><a href="https://android.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="enthusiasts and power users of the Android operating system">Android Enthusiasts</a></li>
                <li class="-item"><a href="https://security.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="information security professionals">Information Security</a></li>
                <li class="-item"><a href="https://dba.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="database professionals who wish to improve their database skills and learn from others in the community">Database Administrators</a></li>
                <li class="-item"><a href="https://drupal.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="Drupal developers and administrators">Drupal Answers</a></li>
                <li class="-item"><a href="https://sharepoint.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="SharePoint enthusiasts">SharePoint</a></li>
                <li class="-item"><a href="https://ux.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="user experience researchers and experts">User Experience</a></li>
                <li class="-item"><a href="https://mathematica.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="users of Wolfram Mathematica">Mathematica</a></li>
                    </ul></div><div class="site-footer--col site-footer--category js-footer-col" data-name="Technology"><ul class="-list">
                <li class="-item"><a href="https://salesforce.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="Salesforce administrators, implementation experts, developers and anybody in-between">Salesforce</a></li>
                <li class="-item"><a href="https://expressionengine.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="administrators, end users, developers and designers for ExpressionEngine&#174; CMS">ExpressionEngine&#174; Answers</a></li>
                <li class="-item"><a href="https://pt.stackoverflow.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="programadores profissionais e entusiastas">Stack Overflow em Portugu&#234;s</a></li>
                <li class="-item"><a href="https://blender.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="people who use Blender to create 3D graphics, animations, or games">Blender</a></li>
                <li class="-item"><a href="https://networkengineering.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="network engineers">Network Engineering</a></li>
                <li class="-item"><a href="https://crypto.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="software developers, mathematicians and others interested in cryptography">Cryptography</a></li>
                <li class="-item"><a href="https://codereview.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="peer programmer code reviews">Code Review</a></li>
                    </ul></div><div class="site-footer--col site-footer--category js-footer-col" data-name="Technology"><ul class="-list">
                <li class="-item"><a href="https://magento.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="users of the Magento e-Commerce platform">Magento</a></li>
                <li class="-item"><a href="https://softwarerecs.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="people seeking specific software recommendations">Software Recommendations</a></li>
                <li class="-item"><a href="https://dsp.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="practitioners of the art and science of signal, image and video processing">Signal Processing</a></li>
                <li class="-item"><a href="https://emacs.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="those using, extending or developing Emacs">Emacs</a></li>
                <li class="-item"><a href="https://raspberrypi.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="users and developers of hardware and software for Raspberry Pi">Raspberry Pi</a></li>
                <li class="-item"><a href="https://ru.stackoverflow.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="программистов">Stack Overflow на русском</a></li>
                <li class="-item"><a href="https://codegolf.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="programming puzzle enthusiasts and code golfers">Programming Puzzles &amp; Code Golf</a></li>
                    </ul></div><div class="site-footer--col site-footer--category js-footer-col" data-name="Technology"><ul class="-list">
                <li class="-item"><a href="https://es.stackoverflow.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="programadores y profesionales de la inform&#225;tica">Stack Overflow en espa&#241;ol</a></li>
                <li class="-item"><a href="https://ethereum.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="users of Ethereum, the decentralized application platform and smart contract enabled blockchain">Ethereum</a></li>
                <li class="-item"><a href="https://datascience.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="Data science professionals, Machine Learning specialists, and those interested in learning more about the field">Data Science</a></li>
                <li class="-item"><a href="https://arduino.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="developers of open-source hardware and software that is compatible with Arduino">Arduino</a></li>
                <li class="-item"><a href="https://bitcoin.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="Bitcoin crypto-currency enthusiasts">Bitcoin</a></li>
                            <li class="-item">
                    <a href="https://stackexchange.com/sites#technology" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 26 })">
                        <strong>
                            more (31)
                        </strong>
                    </a>
                </li>
        </ul>
    </div>
    <div class="site-footer--col site-footer--category js-footer-col" data-name="Life / Arts">
        <ul class="-list">
                <li class="-item"><a href="https://photo.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="professional, enthusiast and amateur photographers">Photography</a></li>
                <li class="-item"><a href="https://scifi.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="science fiction and fantasy enthusiasts">Science Fiction &amp; Fantasy</a></li>
                <li class="-item"><a href="https://graphicdesign.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="Graphic Design professionals, students, and enthusiasts">Graphic Design</a></li>
                <li class="-item"><a href="https://movies.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="movie and tv enthusiasts">Movies &amp; TV</a></li>
                <li class="-item"><a href="https://music.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="musicians, students, and enthusiasts">Music: Practice &amp; Theory</a></li>
                <li class="-item"><a href="https://worldbuilding.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="writers/artists using science, geography and culture to construct imaginary worlds and settings">Worldbuilding</a></li>
                <li class="-item"><a href="https://cooking.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="professional and amateur chefs">Seasoned Advice (cooking)</a></li>
                    </ul></div><div class="site-footer--col site-footer--category js-footer-col" data-name="Life / Arts"><ul class="-list">
                <li class="-item"><a href="https://diy.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="contractors and serious DIYers">Home Improvement</a></li>
                <li class="-item"><a href="https://money.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="people who want to be financially literate">Personal Finance &amp; Money</a></li>
                <li class="-item"><a href="https://academia.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="academics and those enrolled in higher education">Academia</a></li>
                <li class="-item"><a href="https://law.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="legal professionals, students, and others with experience or interest in law">Law</a></li>
                            <li class="-item">
                    <a href="https://stackexchange.com/sites#lifearts" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 26 })">
                        <strong>
                            more (15)
                        </strong>
                    </a>
                </li>
        </ul>
    </div>
    <div class="site-footer--col site-footer--category js-footer-col" data-name="Culture / Recreation">
        <ul class="-list">
                <li class="-item"><a href="https://english.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="linguists, etymologists, and serious English language enthusiasts">English Language &amp; Usage</a></li>
                <li class="-item"><a href="https://skeptics.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="scientific skepticism">Skeptics</a></li>
                <li class="-item"><a href="https://judaism.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="those who base their lives on Jewish law and tradition and anyone interested in learning more">Mi Yodeya (Judaism)</a></li>
                <li class="-item"><a href="https://travel.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="road warriors and seasoned travelers">Travel</a></li>
                <li class="-item"><a href="https://christianity.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="committed Christians, experts in Christianity and those interested in learning more">Christianity</a></li>
                <li class="-item"><a href="https://ell.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="speakers of other languages learning English">English Language Learners</a></li>
                <li class="-item"><a href="https://japanese.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="students, teachers, and linguists wanting to discuss the finer points of the Japanese language">Japanese Language</a></li>
                    </ul></div><div class="site-footer--col site-footer--category js-footer-col" data-name="Culture / Recreation"><ul class="-list">
                <li class="-item"><a href="https://gaming.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="passionate videogamers on all platforms">Arqade (gaming)</a></li>
                <li class="-item"><a href="https://bicycles.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="people who build and repair bicycles, people who train cycling, or commute on bicycles">Bicycles</a></li>
                <li class="-item"><a href="https://rpg.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="gamemasters and players of tabletop, paper-and-pencil role-playing games">Role-playing Games</a></li>
                <li class="-item"><a href="https://anime.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="anime and manga fans">Anime &amp; Manga</a></li>
                <li class="-item"><a href="https://puzzling.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="those who create, solve, and study puzzles">Puzzling</a></li>
                <li class="-item"><a href="https://mechanics.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="mechanics and DIY enthusiast owners of cars, trucks, and motorcycles">Motor Vehicle Maintenance &amp; Repair</a></li>
                            <li class="-item">
                    <a href="https://stackexchange.com/sites#culturerecreation" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 26 })">
                        <strong>
                            more (33)
                        </strong>
                    </a>
                </li>
        </ul>
    </div>
    <div class="site-footer--col site-footer--category js-footer-col" data-name="Science">
        <ul class="-list">
                <li class="-item"><a href="https://mathoverflow.net" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="professional mathematicians">MathOverflow</a></li>
                <li class="-item"><a href="https://math.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="people studying math at any level and professionals in related fields">Mathematics</a></li>
                <li class="-item"><a href="https://stats.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="people interested in statistics, machine learning, data analysis, data mining, and data visualization">Cross Validated (stats)</a></li>
                <li class="-item"><a href="https://cstheory.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="theoretical computer scientists and researchers in related fields">Theoretical Computer Science</a></li>
                <li class="-item"><a href="https://physics.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="active researchers, academics and students of physics">Physics</a></li>
                <li class="-item"><a href="https://chemistry.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="scientists, academics, teachers, and students in the field of chemistry">Chemistry</a></li>
                <li class="-item"><a href="https://biology.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="biology researchers, academics, and students">Biology</a></li>
                    </ul></div><div class="site-footer--col site-footer--category js-footer-col" data-name="Science"><ul class="-list">
                <li class="-item"><a href="https://cs.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="students, researchers and practitioners of computer science">Computer Science</a></li>
                <li class="-item"><a href="https://philosophy.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="those interested in the study of the fundamental nature of knowledge, reality, and existence">Philosophy</a></li>
                            <li class="-item">
                    <a href="https://stackexchange.com/sites#science" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 26 })">
                        <strong>
                            more (10)
                        </strong>
                    </a>
                </li>
        </ul>
    </div>
    <div class="site-footer--col site-footer--category js-footer-col" data-name="Other">
        <ul class="-list">
                <li class="-item"><a href="https://meta.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="meta-discussion of the Stack Exchange family of Q&amp;A websites">Meta Stack Exchange</a></li>
                <li class="-item"><a href="https://stackapps.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="apps, scripts, and development with the Stack Exchange API">Stack Apps</a></li>
                <li class="-item"><a href="https://api.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="programmatic interaction with Stack Exchange sites">API</a></li>
                <li class="-item"><a href="https://data.stackexchange.com" class="-link js-gps-track" data-gps-track="footer.click({ location: 1, link: 25 })" title="querying Stack Exchange data using SQL">Data</a></li>
                    </ul>
    </div>
                </div>
            </nav>
            <div class="site-footer--copyright fs-fine">
                <ul class="-list">
                    <li class="-item"><a class="js-gps-track -link" data-gps-track="footer.click({ location: 2, link:4 })" href="https://stackoverflow.blog?blb=1">Blog</a></li>
                    <li class="-item"><a href="https://www.facebook.com/officialstackoverflow/" class="-link">Facebook</a></li>
                    <li class="-item"><a href="https://twitter.com/stackoverflow" class="-link">Twitter</a></li>
                    <li class="-item"><a href="https://linkedin.com/company/stack-overflow" class="-link">LinkedIn</a></li>
                </ul>

                <p class="mt-auto mb24">
site design / logo &#169; 2019 Stack Exchange Inc; user contributions licensed under <a href="https://creativecommons.org/licenses/by-sa/3.0/" rel="license">cc by-sa 3.0</a>
                            with <a href="https://stackoverflow.blog/2009/06/25/attribution-required/" rel="license">attribution required</a>.
                    <span id="svnrev">rev&nbsp;2019.4.29.33475</span>
                </p>
            </div>
        </div>

            </footer>
            <script>StackExchange.ready(function () { StackExchange.responsiveness.addSwitcher(); })</script>
    <noscript>
        <div id="noscript-warning">Stack Overflow works best with JavaScript enabled
            <img src="https://pixel.quantserve.com/pixel/p-c1rF4kxgLUzNc.gif" alt="" class="dno">
        </div>
    </noscript>

<script>
            (function(i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function() { (i[r].q = i[r].q || []).push(arguments) }, i[r].l = 1 * new Date(); a = s.createElement(o),
                m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m);
            })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');

            StackExchange.ready(function () {

                StackExchange.ga.init({
                    sendTitles: true,
                    tracker: window.ga,
                    trackingCodes: [
                        'UA-108242619-1'
                    ]
                });

                    StackExchange.ga.setDimension('dimension1', '15544899');

                    StackExchange.ga.setDimension('dimension10', 'ActivelyLooking');

                    StackExchange.ga.setDimension('dimension2', '|python|image|');

                    StackExchange.ga.setDimension('dimension3', 'Questions/Show');


                StackExchange.ga.trackPageView();
            });
            
/**/
            
            var _qevents = _qevents || [],
            _comscore = _comscore || [];
            (function() {
                var ssl = 'https:' == document.location.protocol,
                    s = document.getElementsByTagName('script')[0],
                    qc = document.createElement('script');
                 qc.async = true;
                    qc.src = (ssl ? 'https://secure' : 'http://edge') + '.quantserve.com/quant.js';
                    s.parentNode.insertBefore(qc, s);
                    _qevents.push({ qacct: "p-c1rF4kxgLUzNc" });
/**/
                 var sc = document.createElement('script');
                    sc.async = true;
                    sc.src = (ssl ? 'https://sb' : 'http://b') + '.scorecardresearch.com/beacon.js';
                    s.parentNode.insertBefore(sc, s);
                    _comscore.push({ c1: "2", c2: "17440561" });
            })();
            

</script>
            
    </body>
    </html>
')
# qr.make(fit=True)

# img = qr.make_image(fill_color="black", back_color="white")
import qrcode
img = qrcode.make('')

img.show()